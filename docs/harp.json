{
  "globals": {
    "title": "Atlassian Connect Documentation",
    "subtitle": "Documentation",
    "schemas": {
      "jira": {
        "properties": {
          "baseUrl": {
            "type": "string"
          },
          "authentication": {
            "properties": {
              "publicKey": {
                "type": "string",
                "description": "The publicKey used for asymmetric key encryption. Cannot be null if using OAUTH, and ignored when using JWT with\n a shared secret."
              },
              "type": {
                "enum": [
                  "oauth",
                  "jwt",
                  "none"
                ],
                "type": "string",
                "description": "The type of authentication to use. Defaults to jwt."
              }
            },
            "id": "authenticationBean",
            "type": "object",
            "description": "Defines the authentication type to use when signing requests between the host application and the connect add on.\n The authentication type can be either jwt or oauth. If the type is not supplied it will default to jwt.\n"
          },
          "lifecycle": {
            "properties": {
              "enabled": {
                "type": "string"
              },
              "installed": {
                "type": "string"
              },
              "uninstalled": {
                "type": "string"
              },
              "disabled": {
                "type": "string"
              }
            },
            "id": "lifecycleBean",
            "type": "object",
            "title": "Lifecycle",
            "description": "Allows an addon to register callbacks for plugin lifecycle events.\n"
          },
          "vendor": {
            "properties": {
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "id": "vendorBean",
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "the name of the addon"
          },
          "enableLicensing": {
            "type": "boolean"
          },
          "links": {
            "additionalProperties": true
          },
          "modules": {
            "properties": {
              "adminPages": {
                "items": {
                  "properties": {
                    "conditions": {
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "properties": {
                              "conditions": {
                                "items": {
                                  "$ref": "#"
                                },
                                "type": "array"
                              }
                            },
                            "id": "compositeConditionBean",
                            "type": "object"
                          },
                          {
                            "properties": {
                              "invert": {
                                "type": "boolean"
                              },
                              "condition": {
                                "type": "string"
                              },
                              "params": {
                                "additionalProperties": true
                              }
                            },
                            "id": "singleConditionBean",
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "icon": {
                      "properties": {
                        "height": {
                          "type": "integer",
                          "description": "The height in pixels of the icon image."
                        },
                        "width": {
                          "type": "integer",
                          "description": "The width in pixels of the icon image."
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL of the icon. Your icon needs to be hosted remotely at a web-accessible location. You can specify the\n URL as an absolute URL or relative to the add-on's base URL."
                        }
                      },
                      "id": "iconBean",
                      "type": "object",
                      "description": "An optional icon to display with the link text or as the link, specified by URL to its hosted location.\n  You can specify a particular width and height for the icon. Most link icons in Atlassian applications\n  are 16 by 16 pixels."
                    },
                    "weight": {
                      "type": "integer",
                      "description": "Determines the order in which the page's link appears in the menu or list.\n\n The \"lightest\" weight (i.e., lowest number) appears first, rising relative to other items,\n while the \"heaviest\" weights sink to the bottom of the menu or list.\n\n Built-in web items have weights that are incremented by numbers that leave room for additional\n items, such as by 10 or 100. Be mindful of the weight you choose for your item, so that it appears\n in a sensible order given existing items."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location in the application interface where the page's link should appear. For the Atlassian application\n interface, a location is something like the coordinates on a map. It points to a particular drop-down menu or\n navigation list in the UI.\n\n Places in the Atlassian UI are identified by what are known as \"well-known locations.\"\n For example, the \"system.admin/globalsettings\" location is in the administrative\n menu link on the left side of the Administration Console."
                    },
                    "name": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object"
                    },
                    "params": {
                      "additionalProperties": true
                    },
                    "url": {
                      "type": "string",
                      "description": "Specifies the URL targeted by the page. The URL is relative to either the\n  the add-on's base URL"
                    }
                  },
                  "id": "connectPageModuleBean",
                  "type": "object",
                  "description": "Page modules are UI extension points that add-ons can use to insert content into various areas of the host\n application's interface. You implement a page module (along with the other type of module you can use with\n Atlassian Connect, webhooks) by declaring it in the add-on descriptor and implementing the add-on code that\n composes it.\n\n Each application has page module types that are specific for it, but there are some common page types as well.\n For instance, both JIRA and Confluence support the general-page and profile-page module, but only JIRA has the\n issue-panel-page.\n\n The page module takes care of integrating the add-on content into the application for you. The add-on content\n automatically gets the page styles and decorators from the host application.\n"
                },
                "type": "array",
                "title": "Admin Page"
              },
              "configurePages": {
                "items": {
                  "properties": {
                    "conditions": {
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "properties": {
                              "invert": {
                                "type": "boolean"
                              },
                              "condition": {
                                "type": "string"
                              },
                              "params": {
                                "additionalProperties": true
                              }
                            },
                            "id": "singleConditionBean",
                            "type": "object"
                          },
                          {
                            "properties": {
                              "conditions": {
                                "items": {
                                  "$ref": "#"
                                },
                                "type": "array"
                              }
                            },
                            "id": "compositeConditionBean",
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "icon": {
                      "properties": {
                        "height": {
                          "type": "integer",
                          "description": "The height in pixels of the icon image."
                        },
                        "width": {
                          "type": "integer",
                          "description": "The width in pixels of the icon image."
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL of the icon. Your icon needs to be hosted remotely at a web-accessible location. You can specify the\n URL as an absolute URL or relative to the add-on's base URL."
                        }
                      },
                      "id": "iconBean",
                      "type": "object"
                    },
                    "weight": {
                      "type": "integer"
                    },
                    "location": {
                      "type": "string"
                    },
                    "isDefault": {
                      "type": "boolean"
                    },
                    "name": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object"
                    },
                    "params": {
                      "additionalProperties": true
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "id": "configurePageModuleBean",
                  "type": "object",
                  "description": "A configure page module is a page module used to configure the addon itself.\n Other than that it is the same as other pages.\n\n If more than one configure page is specified, then exactly one of them must have the [default] field set.\n A 'configure' button will link to this page from the manage plugins administration console.\n\n If there is only one configure page specified then it will automatically be used regardless of the default field.\n\n If no configure page modules are specified then no configure button will be included on the install page.\n"
                },
                "type": "array",
                "title": "Configure Page"
              },
              "generalPages": {
                "items": {
                  "properties": {
                    "conditions": {
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "properties": {
                              "invert": {
                                "type": "boolean"
                              },
                              "condition": {
                                "type": "string"
                              },
                              "params": {
                                "additionalProperties": true
                              }
                            },
                            "id": "singleConditionBean",
                            "type": "object"
                          },
                          {
                            "properties": {
                              "conditions": {
                                "items": {
                                  "$ref": "#"
                                },
                                "type": "array"
                              }
                            },
                            "id": "compositeConditionBean",
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "icon": {
                      "properties": {
                        "height": {
                          "type": "integer",
                          "description": "The height in pixels of the icon image."
                        },
                        "width": {
                          "type": "integer",
                          "description": "The width in pixels of the icon image."
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL of the icon. Your icon needs to be hosted remotely at a web-accessible location. You can specify the\n URL as an absolute URL or relative to the add-on's base URL."
                        }
                      },
                      "id": "iconBean",
                      "type": "object",
                      "description": "An optional icon to display with the link text or as the link, specified by URL to its hosted location.\n  You can specify a particular width and height for the icon. Most link icons in Atlassian applications\n  are 16 by 16 pixels."
                    },
                    "weight": {
                      "type": "integer",
                      "description": "Determines the order in which the page's link appears in the menu or list.\n\n The \"lightest\" weight (i.e., lowest number) appears first, rising relative to other items,\n while the \"heaviest\" weights sink to the bottom of the menu or list.\n\n Built-in web items have weights that are incremented by numbers that leave room for additional\n items, such as by 10 or 100. Be mindful of the weight you choose for your item, so that it appears\n in a sensible order given existing items."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location in the application interface where the page's link should appear. For the Atlassian application\n interface, a location is something like the coordinates on a map. It points to a particular drop-down menu or\n navigation list in the UI.\n\n Places in the Atlassian UI are identified by what are known as \"well-known locations.\"\n For example, the \"system.admin/globalsettings\" location is in the administrative\n menu link on the left side of the Administration Console."
                    },
                    "name": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object"
                    },
                    "params": {
                      "additionalProperties": true
                    },
                    "url": {
                      "type": "string",
                      "description": "Specifies the URL targeted by the page. The URL is relative to either the\n  the add-on's base URL"
                    }
                  },
                  "id": "connectPageModuleBean",
                  "type": "object",
                  "description": "Page modules are UI extension points that add-ons can use to insert content into various areas of the host\n application's interface. You implement a page module (along with the other type of module you can use with\n Atlassian Connect, webhooks) by declaring it in the add-on descriptor and implementing the add-on code that\n composes it.\n\n Each application has page module types that are specific for it, but there are some common page types as well.\n For instance, both JIRA and Confluence support the general-page and profile-page module, but only JIRA has the\n issue-panel-page.\n\n The page module takes care of integrating the add-on content into the application for you. The add-on content\n automatically gets the page styles and decorators from the host application.\n"
                },
                "type": "array",
                "title": "General Page"
              },
              "jiraComponentTabPanels": {
                "items": {
                  "properties": {
                    "conditions": {
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "properties": {
                              "invert": {
                                "type": "boolean"
                              },
                              "condition": {
                                "type": "string"
                              },
                              "params": {
                                "additionalProperties": true
                              }
                            },
                            "id": "singleConditionBean",
                            "type": "object"
                          },
                          {
                            "properties": {
                              "conditions": {
                                "items": {
                                  "$ref": "#"
                                },
                                "type": "array"
                              }
                            },
                            "id": "compositeConditionBean",
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "weight": {
                      "type": "integer"
                    },
                    "name": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object"
                    },
                    "params": {
                      "additionalProperties": true
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "id": "connectTabPanelModuleBean",
                  "type": "object"
                },
                "type": "array",
                "title": "Component Tab Panel"
              },
              "jiraIssueTabPanels": {
                "items": {
                  "properties": {
                    "conditions": {
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "properties": {
                              "invert": {
                                "type": "boolean"
                              },
                              "condition": {
                                "type": "string"
                              },
                              "params": {
                                "additionalProperties": true
                              }
                            },
                            "id": "singleConditionBean",
                            "type": "object"
                          },
                          {
                            "properties": {
                              "conditions": {
                                "items": {
                                  "$ref": "#"
                                },
                                "type": "array"
                              }
                            },
                            "id": "compositeConditionBean",
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "weight": {
                      "type": "integer"
                    },
                    "name": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object"
                    },
                    "params": {
                      "additionalProperties": true
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "id": "connectTabPanelModuleBean",
                  "type": "object"
                },
                "type": "array",
                "title": "Issue Tab Panel"
              },
              "jiraProfileTabPanels": {
                "items": {
                  "properties": {
                    "conditions": {
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "properties": {
                              "invert": {
                                "type": "boolean"
                              },
                              "condition": {
                                "type": "string"
                              },
                              "params": {
                                "additionalProperties": true
                              }
                            },
                            "id": "singleConditionBean",
                            "type": "object"
                          },
                          {
                            "properties": {
                              "conditions": {
                                "items": {
                                  "$ref": "#"
                                },
                                "type": "array"
                              }
                            },
                            "id": "compositeConditionBean",
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "weight": {
                      "type": "integer"
                    },
                    "name": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object"
                    },
                    "params": {
                      "additionalProperties": true
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "id": "connectTabPanelModuleBean",
                  "type": "object"
                },
                "type": "array",
                "title": "User Profile Tab Panel"
              },
              "jiraProjectAdminTabPanels": {
                "items": {
                  "properties": {
                    "conditions": {
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "properties": {
                              "invert": {
                                "type": "boolean"
                              },
                              "condition": {
                                "type": "string"
                              },
                              "params": {
                                "additionalProperties": true
                              }
                            },
                            "id": "singleConditionBean",
                            "type": "object"
                          },
                          {
                            "properties": {
                              "conditions": {
                                "items": {
                                  "$ref": "#"
                                },
                                "type": "array"
                              }
                            },
                            "id": "compositeConditionBean",
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "weight": {
                      "type": "integer"
                    },
                    "location": {
                      "type": "string"
                    },
                    "name": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object"
                    },
                    "params": {
                      "additionalProperties": true
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "id": "connectProjectAdminTabPanelModuleBean",
                  "type": "object",
                  "title": "Project Admin Tab Panel",
                  "description": "Module bean for Jira ProjectAdmin Tab Pages. The module JSON looks like\n <p>\n <pre>\n \"jiraProjectAdminTabPanels\": [{\n   \"name\": {\n     \"value\": \"My ProjectAdmin Tab\",\n     \"i18n\": \"my.tab\"\n   },\n   \"url\": \"/my-general-page\",\n   \"weight\": 100\n   \"location\" : \"projectgroup4\"\n }]\n </pre>\n </p>\n"
                },
                "type": "array"
              },
              "jiraProjectTabPanels": {
                "items": {
                  "properties": {
                    "conditions": {
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "properties": {
                              "invert": {
                                "type": "boolean"
                              },
                              "condition": {
                                "type": "string"
                              },
                              "params": {
                                "additionalProperties": true
                              }
                            },
                            "id": "singleConditionBean",
                            "type": "object"
                          },
                          {
                            "properties": {
                              "conditions": {
                                "items": {
                                  "$ref": "#"
                                },
                                "type": "array"
                              }
                            },
                            "id": "compositeConditionBean",
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "weight": {
                      "type": "integer"
                    },
                    "name": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object"
                    },
                    "params": {
                      "additionalProperties": true
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "id": "connectTabPanelModuleBean",
                  "type": "object"
                },
                "type": "array",
                "title": "Project Tab Panel"
              },
              "jiraSearchRequestViews": {
                "items": {
                  "properties": {
                    "conditions": {
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "properties": {
                              "invert": {
                                "type": "boolean"
                              },
                              "condition": {
                                "type": "string"
                              },
                              "params": {
                                "additionalProperties": true
                              }
                            },
                            "id": "singleConditionBean",
                            "type": "object"
                          },
                          {
                            "properties": {
                              "conditions": {
                                "items": {
                                  "$ref": "#"
                                },
                                "type": "array"
                              }
                            },
                            "id": "compositeConditionBean",
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "weight": {
                      "type": "integer",
                      "description": "Determines the order in which the Search Request View entry appears in the *Export* menu.\n\n The \"lightest\" weight (i.e., lowest number) appears first, rising relative to other items,\n while the \"heaviest\" weights sink to the bottom of the menu or list."
                    },
                    "description": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object",
                      "description": "A description of your Search Request View"
                    },
                    "name": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object"
                    },
                    "params": {
                      "additionalProperties": true
                    },
                    "url": {
                      "type": "string",
                      "description": "The URL of the service that will render the representation for the result set. The URL is\n interpreted relative to the *baseUrl* in the descriptor."
                    }
                  },
                  "id": "searchRequestViewModuleBean",
                  "type": "object",
                  "title": "Search Request View",
                  "description": "A Search Request View allows you to render a custom representation of a search result. Rendering a custom XML format\n is a common example.\n\n After an add-on declaring a Search Request View module is installed, a new entry will show up in the\n *Export* menu on the Issue Navigator page. Clicking the entry will redirect to the URL that is provided\n by your add-on, passing in the issue keys, pagination information and the OAuth parameters that allow you\n to verify the validity of the request.\n\n To declare a Search Request View, you must mainly provide the URL that will handle the HTTP GET request.\n This URL is relative to the base url of the descriptor. Here is an example:\n\n     \"jiraSearchRequestViews\": [\n        {\n           \"conditions\": [\n              {\n                 \"condition\": \"user_is_logged_in\",\n                 \"invert\": false\n              }\n           ],\n           \"description\": {\n              \"i18n\": \"my.searchRequestView.desc\",\n              \"value\": \"My description\"\n           },\n           \"name\": {\n              \"i18n\": \"my.searchRequestView.name\",\n              \"value\": \"My Name\"\n           },\n           \"url\": \"/search-request.csv\",\n           \"weight\": 10\n        }\n     ]\n\n Your service will be invoked with these parameters:\n\n * __issues__: A comma-separated list of issue keys\n * __link__: A link back to the JIRA Issue Navigator where the action was invoked\n * __startIssue__: The index of the first passed issue key in the list of all issues\n * __endIssue__: The index of the last passed issue key in the list of all issues\n * __totalIssues__: The number of issues in the entire search result\n"
                },
                "type": "array"
              },
              "jiraVersionTabPanels": {
                "items": {
                  "properties": {
                    "conditions": {
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "properties": {
                              "conditions": {
                                "items": {
                                  "$ref": "#"
                                },
                                "type": "array"
                              }
                            },
                            "id": "compositeConditionBean",
                            "type": "object"
                          },
                          {
                            "properties": {
                              "invert": {
                                "type": "boolean"
                              },
                              "condition": {
                                "type": "string"
                              },
                              "params": {
                                "additionalProperties": true
                              }
                            },
                            "id": "singleConditionBean",
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "weight": {
                      "type": "integer"
                    },
                    "name": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object"
                    },
                    "params": {
                      "additionalProperties": true
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "id": "connectTabPanelModuleBean",
                  "type": "object"
                },
                "type": "array",
                "title": "Version Tab Panel"
              },
              "jiraWorkflowPostFunctions": {
                "items": {
                  "properties": {
                    "description": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object",
                      "description": "The description of the add-on's functionality that will show up in the *Manage add-ons* page."
                    },
                    "name": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object"
                    },
                    "edit": {
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      },
                      "id": "urlBean",
                      "type": "object",
                      "description": "The relative URL to the add-on page that allows to configure the workflow post function once it exists."
                    },
                    "view": {
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      },
                      "id": "urlBean",
                      "type": "object",
                      "description": "The relative URL to the add-on page that shows the read-only configuration or summary of the workflow post function."
                    },
                    "create": {
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      },
                      "id": "urlBean",
                      "type": "object",
                      "description": "The relative URL to the add-on page that allows to configure the workflow post function on creation."
                    },
                    "triggered": {
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      },
                      "id": "urlBean",
                      "type": "object",
                      "description": "The relative URL to the add-on resource that will receive the HTTP POST after a workflow transition."
                    }
                  },
                  "id": "workflowPostFunctionModuleBean",
                  "type": "object",
                  "title": "Workflow Post Function",
                  "description": "Post functions carry out any additional processing required *after* a JIRA workflow transition is executed, such as:\n\n * updating an issue's fields\n * adding a comment to an issue\n\n Your add-on needs to declare the URL that JIRA will invoke with an HTTP POST after the transition is completed.\n Each POST will include the issue and transition details and the configuration of the workflow function. It\n will also include the authentication headers that allow the add-on to validate the authenticity of that request.\n\n Often, the workflow post function will allow some degree of configuration of its behavior. As an example:\n You may want to react to a state transition only if the issue has a particular label, and you want the project\n administrator to configure that label. For this purpose, three additional (optional) URLs in the descriptor\n allow you to declare the pages that will show:\n\n * The read-only view or summary of the configuration\n * The form that is shown when a workflow post function is first created\n * The form that is shown when a workflow post function is edited\n\n All URLs are relative to the base URL that is declared in the connect-container element of the descriptor.\n\n Example workflow post function descriptor block\n\n     \"jiraWorkflowPostFunctions\": [\n \t   {\n         \"name\": {\n             \"i18n\": \"my.function\",\n             \"value\": \"My  function\"\n         },\n         \"description\": {\n             \"i18n\": \"my.function.desc\",\n             \"value\": \"My function description\"\n         },\n         \"triggered\": {\n             \"url\": \"/triggered\"\n         },\n         \"create\": {\n             \"url\": \"/create\"\n         },\n         \"edit\": {\n             \"url\": \"/edit\"\n         },\n         \"view\": {\n             \"url\": \"/view\"\n         }\n     }]\n\n ## Contents of the HTTP POST\n\n To understand the type of content that is sent to the add-on after a state transition, you can use the webhook\n inspector tool. The [Webhook Inspector](https://bitbucket.org/atlassianlabs/webhook-inspector) is a Connect add-on\n that you can install in your development environment to inspect the content of event messages.\n\n Here is an example POST body:\n\n      {\n          \"configuration\": {\n              \"value\": \"Configuration from the post function edit page\"\n          },\n          \"issue\": {\n              \"fields\": {\n                  \"assignee\": {\n                      \"active\": true,\n                      \"avatarUrls\": {\n                          \"16x16\": \"http://issues.example.com/jira/secure/useravatar?size=xsmall&avatarId=10062\",\n                          \"24x24\": \"http://issues.example.com/jira/secure/useravatar?size=small&avatarId=10062\",\n                          \"32x32\": \"http://issues.example.com/jira/secure/useravatar?size=medium&avatarId=10062\",\n                          \"48x48\": \"http://issues.example.com/jira/secure/useravatar?avatarId=10062\"\n                      },\n                      \"displayName\": \"A. D. Ministrator (Sysadmin)\",\n                      \"emailAddress\": \"admin@example.com\",\n                      \"name\": \"admin\",\n                      \"self\": \"http://issues.example.com/jira/rest/api/2/user?username=admin\"\n                  },\n                  \"attachment\": [],\n                  \"comment\": {\n                      \"comments\": [],\n                      \"maxResults\": 0,\n                      \"startAt\": 0,\n                      \"total\": 0\n                  },\n                  \"components\": [],\n                  \"created\": \"2013-11-18T17:56:23.864+1100\",\n                  \"description\": null,\n                  \"duedate\": null,\n                  \"environment\": null,\n                  \"fixVersions\": [],\n                  \"issuetype\": {\n                      \"description\": \"A problem which impairs or prevents the functions of the product.\",\n                      \"iconUrl\": \"http://issues.example.com/jira/images/icons/issuetypes/bug.png\",\n                      \"id\": \"1\",\n                      \"name\": \"Bug\",\n                      \"self\": \"http://issues.example.com/jira/rest/api/2/issuetype/1\",\n                      \"subtask\": false\n                  },\n                  \"labels\": [],\n                  \"lastViewed\": \"2013-11-18T17:56:31.793+1100\",\n                  \"priority\": {\n                      \"iconUrl\": \"http://issues.example.com/jira/images/icons/priorities/major.png\",\n                      \"id\": \"3\",\n                      \"name\": \"Major\",\n                      \"self\": \"http://issues.example.com/jira/rest/api/2/priority/3\"\n                  },\n                  \"project\": {\n                      \"avatarUrls\": {\n                          \"16x16\": \"http://issues.example.com/jira/secure/projectavatar?size=xsmall&pid=10000&avatarId=10011\",\n                          \"24x24\": \"http://issues.example.com/jira/secure/projectavatar?size=small&pid=10000&avatarId=10011\",\n                          \"32x32\": \"http://issues.example.com/jira/secure/projectavatar?size=medium&pid=10000&avatarId=10011\",\n                          \"48x48\": \"http://issues.example.com/jira/secure/projectavatar?pid=10000&avatarId=10011\"\n                      },\n                      \"id\": \"10000\",\n                      \"key\": \"TEST\",\n                      \"name\": \"Test\",\n                      \"self\": \"http://issues.example.com/jira/rest/api/2/project/10000\"\n                  },\n                  \"reporter\": {\n                      \"active\": true,\n                      \"avatarUrls\": {\n                          \"16x16\": \"http://issues.example.com/jira/secure/useravatar?size=xsmall&avatarId=10062\",\n                          \"24x24\": \"http://issues.example.com/jira/secure/useravatar?size=small&avatarId=10062\",\n                          \"32x32\": \"http://issues.example.com/jira/secure/useravatar?size=medium&avatarId=10062\",\n                          \"48x48\": \"http://issues.example.com/jira/secure/useravatar?avatarId=10062\"\n                      },\n                      \"displayName\": \"A. D. Ministrator (Sysadmin)\",\n                      \"emailAddress\": \"admin@example.com\",\n                      \"name\": \"admin\",\n                      \"self\": \"http://issues.example.com/jira/rest/api/2/user?username=admin\"\n                  },\n                  \"resolution\": {\n                      \"description\": \"A fix for this issue is checked into the tree and tested.\",\n                      \"id\": \"1\",\n                      \"name\": \"Fixed\",\n                      \"self\": \"http://issues.example.com/jira/rest/api/2/resolution/1\"\n                  },\n                  \"resolutiondate\": \"2013-11-18T17:56:31.799+1100\",\n                  \"status\": {\n                      \"description\": \"The issue is open and ready for the assignee to start work on it.\",\n                      \"iconUrl\": \"http://issues.example.com/jira/images/icons/statuses/open.png\",\n                      \"id\": \"1\",\n                      \"name\": \"Open\",\n                      \"self\": \"http://issues.example.com/jira/rest/api/2/status/1\"\n                  },\n                  \"summary\": \"The issue summary\",\n                  \"updated\": \"2013-11-18T17:56:23.864+1100\",\n                  \"versions\": [],\n                  \"votes\": {\n                      \"hasVoted\": false,\n                      \"self\": \"http://issues.example.com/jira/rest/api/2/issue/TEST-1/votes\",\n                      \"votes\": 0\n                  },\n                  \"watches\": {\n                      \"isWatching\": true,\n                      \"self\": \"http://issues.example.com/jira/rest/api/2/issue/TEST-1/watchers\",\n                      \"watchCount\": 1\n                  },\n                  \"workratio\": -1\n              },\n              \"id\": \"10000\",\n              \"key\": \"TEST-1\",\n              \"self\": \"http://issues.example.com/jira/issue/10000\"\n          },\n          \"transition\": {\n              \"from_status\": \"Open\",\n              \"to_status\": \"Resolved\",\n              \"transitionId\": 5,\n              \"transitionName\": \"Resolve Issue\",\n              \"workflowId\": 10000,\n              \"workflowName\": \"classic default workflow\"\n          }\n      }\n"
                },
                "type": "array"
              },
              "webItems": {
                "items": {
                  "properties": {
                    "conditions": {
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "properties": {
                              "invert": {
                                "type": "boolean"
                              },
                              "condition": {
                                "type": "string"
                              },
                              "params": {
                                "additionalProperties": true
                              }
                            },
                            "id": "singleConditionBean",
                            "type": "object"
                          },
                          {
                            "properties": {
                              "conditions": {
                                "items": {
                                  "$ref": "#"
                                },
                                "type": "array"
                              }
                            },
                            "id": "compositeConditionBean",
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "icon": {
                      "properties": {
                        "height": {
                          "type": "integer",
                          "description": "The height in pixels of the icon image."
                        },
                        "width": {
                          "type": "integer",
                          "description": "The width in pixels of the icon image."
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL of the icon. Your icon needs to be hosted remotely at a web-accessible location. You can specify the\n URL as an absolute URL or relative to the add-on's base URL."
                        }
                      },
                      "id": "iconBean",
                      "type": "object",
                      "description": "An optional icon to display with the link text or as the link, specified by URL to its hosted location.\n  You can specify a particular width and height for the icon. Most link icons in Atlassian applications\n  are 16 by 16 pixels."
                    },
                    "styleClasses": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array",
                      "description": "Specifies custom styles for the web link target page, if desired. By default, the web item content gets\n styled in the default style of the target application."
                    },
                    "weight": {
                      "type": "integer",
                      "description": "Determines the order in which the web item appears in the menu or list.\n\n <p/>\n\n The \"lightest\" weight (i.e., lowest number) appears first, rising relative to other items,\n while the \"heaviest\" weights sink to the bottom of the menu or list.\n\n <p/>\n\n Built-in web items have weights that are incremented by numbers that leave room for additional\n items, such as by 10 or 100. Be mindful of the weight you choose for your item, so that it appears\n in a sensible order given existing items."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location in the application interface where the web item should appear. For the Atlassian application\n interface, a location is something like the coordinates on a map. It points to a particular drop-down menu or\n navigation list in the UI.\n\n <p/>\n\n Places in the Atlassian UI are identified by what are known as \"well-known locations.\"\n For example, the \"system.admin/globalsettings\" location is in the administrative\n menu link on the left side of the Administration Console."
                    },
                    "name": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object"
                    },
                    "link": {
                      "type": "string",
                      "description": "Specifies the URL targeted by the link. The URL can be absolute or relative to either the\n  product URL or the add-on's base URL, depending on the {@link AddOnUrlContext} parameter."
                    },
                    "target": {
                      "properties": {
                        "params": {
                          "additionalProperties": true
                        },
                        "type": {
                          "enum": [
                            "page",
                            "dialog",
                            "inlinedialog"
                          ],
                          "type": "string"
                        },
                        "options": {
                          "additionalProperties": true
                        }
                      },
                      "id": "webItemTargetBean",
                      "type": "object",
                      "description": "Defines the way the link is opened in the browser, such as in a modal or inline dialog.\n  If omitted, the link behaves as a regular hyperlink."
                    },
                    "context": {
                      "enum": [
                        "addon",
                        "product"
                      ],
                      "type": "string",
                      "description": "The context for the URL parameter, if the URL is specified as a relative (not absolute) URL.\n\n <p/>\n\n  This context can be either \"add-on\", which renders the URL relative to the add-on's base URL, or\n  \"product\", which renders the URL relative to the product's base URL."
                    },
                    "params": {
                      "additionalProperties": true
                    },
                    "tooltip": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object",
                      "description": "The internationalised text to be used in the link's tooltip."
                    }
                  },
                  "id": "webItemModuleBean",
                  "type": "object",
                  "title": "Web Item",
                  "description": "Adds a web item to a specified location in the application interface. A web item is a hyperlink\n that’s inserted into some standard place in the Atlassian application interface, such as the\n administration menu.\n\n <p/>\n\n The form that the link takes can vary depending on the location. For instance, a web item in the header bar\n (with a location section of system.top.navigation.bar) adds a link to the navigation bar across the top of the\n interface. On the other hand, a web item in the opsbar-operation location section in JIRA adds an item to the issue\n operation buttons.\n\n <p/>\n\n A web item link can open a new page in the application or a dialog, depending on your configuration.\n\n <p/>\n\n Web links are a simple and useful way to extend Atlassian applications. If you want to extend an Atlassian\n application and don't know where to start, a web item may be all you need.\n"
                },
                "type": "array"
              },
              "webPanels": {
                "items": {
                  "properties": {
                    "conditions": {
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "properties": {
                              "invert": {
                                "type": "boolean"
                              },
                              "condition": {
                                "type": "string"
                              },
                              "params": {
                                "additionalProperties": true
                              }
                            },
                            "id": "singleConditionBean",
                            "type": "object"
                          },
                          {
                            "properties": {
                              "conditions": {
                                "items": {
                                  "$ref": "#"
                                },
                                "type": "array"
                              }
                            },
                            "id": "compositeConditionBean",
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "weight": {
                      "type": "integer",
                      "description": "Determines the order in which web panels appear. Web panels are displayed top to bottom or left to right in\n  order of ascending weight. The \"lightest\" weight is displayed first, while the \"heaviest\" weights sink to the\n  bottom. The weight values for most panels start from 100, and the weights for the links\n  generally start from 10. The weight is incremented by 10 for each in sequence to leave room for custom\n  panels."
                    },
                    "location": {
                      "type": "string",
                      "description": "Location in the application interface for this panel."
                    },
                    "name": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object"
                    },
                    "layout": {
                      "properties": {
                        "height": {
                          "type": "string"
                        },
                        "width": {
                          "type": "string"
                        }
                      },
                      "id": "webPanelLayout",
                      "type": "object",
                      "description": "The width and height of the web panel on the page."
                    },
                    "params": {
                      "additionalProperties": true
                    },
                    "url": {
                      "type": "string",
                      "description": "The URL of the add-on resource that provides the web panel content."
                    }
                  },
                  "id": "webPanelModuleBean",
                  "type": "object",
                  "title": "Web Panel",
                  "description": "Adds a panel (or section) to a page in the Atlassian application. Panels let you present related information and\n controls in the application interface as a group. For example, the existing \"People\" panel in JIRA issue view\n shows the assignee, reporter, and similar information for the issue.\n"
                },
                "type": "array"
              },
              "webhooks": {
                "items": {
                  "properties": {
                    "event": {
                      "type": "string",
                      "description": "Specifies the named event you would like to listen to (e.g., \"enabled\", \"jira:issue_created\", etc.)"
                    },
                    "params": {
                      "additionalProperties": true
                    },
                    "url": {
                      "type": "string",
                      "description": "Specifies your add-on's POST webhook handler URL. This property has to be a relative URL."
                    }
                  },
                  "id": "webHookModuleBean",
                  "type": "object",
                  "title": "Webhooks",
                  "description": "A webhook is a standard mechanism for implementing HTTP callbacks. Atlassian OnDemand applications can execute\n webhooks that your add-ons can use to be notified of certain events that happen in JIRA or Confluence.\n\n Just to give you an idea of how you can use them in add-ons, here are a few sample webhook events:\n\n * When an add-on is enabled or disabled\n * When an issue is created or closed in JIRA\n * When a page is created or updated in Confluence\n\n While some webhooks are specific to the Atlassian application, JIRA or Confluence, others are common to all\n applications. This type includes, for example, the webhooks that generate notifications when the add-on is enabled.\n\n Most add-ons should implement the remote_plugin_enabled webhook. The Atlassian application uses this event to supply\n its public key to the add-on. The Authenticating with OAuth page shows an example of how to use this webhook.\n\n ### Handling the webhook event\n\n To receive webhook events, your add-on needs to include the webhook module declaration in its JSON descriptor. The\n declaration indicates the relative URL of the local resource at which it will receive the notification. In other\n words, the Atlassian application will send an HTTP POST to this resource in response to an application event. The\n add-on code that handles the POST should process any information passed in the body of the message, as appropriate.\n Each webhook POST sent to the add-on will also include the authentication headers that allow the add-on to\n validate the authenticity of that request.\n\n #### Sample webhooks JSON block\n\n     {\n         \"webhooks\": [\n             {\n                 \"event\": \"jira:issue_created\",\n                 \"url\": \"/issue-created\"\n             },\n             ...\n             {\n                 \"event\": \"jira:issue_updated\",\n                 \"url\": \"/issue-updated\"\n             }\n         ]\n     }\n\n ### Webhook event types\n\n To find out what webhooks are available for each application, the best place to look is in the Interactive\n Descriptor Guide [JIRA](https://developer.atlassian.com/connect/api/jira) or\n [Confluence](https://developer.atlassian.com/connect/api/confluence).\n\n ### Inspecting webhook contents\n\n Each type of webhook event includes information specific to that event in the body content of the POST message. The\n add-on resource that listens for webhook posts should receive and process the content as appropriate for the add-on.\n To understand what type of content each webhook generates, you can use the webhook inspector tool.\n\n The <a href=\"https://bitbucket.org/atlassianlabs/webhook-inspector\">Webhook Inspector</a> is a\n <a href=\"https://bitbucket.org/atlassian/atlassian-connect-express\">atlassian-connect-express</a> Connect add-on\n that you can install in your development environment to inspect the content of event messages. The Webhook Inspector\n subscribes and generates each webhook event type available on the running instance of the Atlassian application,\n and prints the body posted by the instance to the console screen.\n"
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "id": "moduleList",
            "type": "object",
            "description": "This class represents the list of modules in the json descriptor.\n Every new module type needs to be added here as a private field and annotated with @ConnectModule\n \n The field name will be what appears in the json.\n \n Note: this class does NOT have a builder. Instead the {@link ConnectAddonBean} has a special reflective builder\n that will handle adding beans to the proper fields in this class by name and type.\n You can buy me a beer later for that little trick when you realize you don't need to keep updating a builder everytime you add a new type here.\n"
          },
          "key": {
            "type": "string",
            "description": "The plugin key for the add on"
          },
          "version": {
            "type": "string"
          }
        },
        "$schema": "http://json-schema.org/draft-04/schema#",
        "id": "connectAddonBean",
        "type": "object",
        "title": "Connect Addon Root Descriptor",
        "description": "The root descriptor for an Atlassian Connect add on\n \n Json Example:\n{\n  \"key\": \"my-addon-key\",\n  \"name\": \"My Connect Addon\",\n  \"version\": \"1.0\",\n  \"description\": \"A connect addon that does something\",\n  \"vendor\": {\n    \"name\": \"My Company\",\n    \"url\": \"http://www.example.com\"\n  },\n  \"links\": {\n    \"self\": \"http://www.example.com/connect/jira\"\n  },\n  \"baseUrl\": \"http://www.example.com/connect/jira\",\n  \"authentication\": {\n    \"type\": \"jwt\"\n  },\n  \"modules\": {}\n}"
      },
      "confluence": {
        "properties": {
          "baseUrl": {
            "type": "string"
          },
          "authentication": {
            "properties": {
              "publicKey": {
                "type": "string",
                "description": "The publicKey used for asymmetric key encryption. Cannot be null if using OAUTH, and ignored when using JWT with\n a shared secret."
              },
              "type": {
                "enum": [
                  "oauth",
                  "jwt",
                  "none"
                ],
                "type": "string",
                "description": "The type of authentication to use. Defaults to jwt."
              }
            },
            "id": "authenticationBean",
            "type": "object",
            "description": "Defines the authentication type to use when signing requests between the host application and the connect add on.\n The authentication type can be either jwt or oauth. If the type is not supplied it will default to jwt.\n"
          },
          "lifecycle": {
            "properties": {
              "enabled": {
                "type": "string"
              },
              "installed": {
                "type": "string"
              },
              "uninstalled": {
                "type": "string"
              },
              "disabled": {
                "type": "string"
              }
            },
            "id": "lifecycleBean",
            "type": "object",
            "title": "Lifecycle",
            "description": "Allows an addon to register callbacks for plugin lifecycle events.\n"
          },
          "vendor": {
            "properties": {
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "id": "vendorBean",
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "the name of the addon"
          },
          "enableLicensing": {
            "type": "boolean"
          },
          "links": {
            "additionalProperties": true
          },
          "modules": {
            "properties": {
              "adminPages": {
                "items": {
                  "properties": {
                    "conditions": {
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "properties": {
                              "invert": {
                                "type": "boolean"
                              },
                              "condition": {
                                "type": "string"
                              },
                              "params": {
                                "additionalProperties": true
                              }
                            },
                            "id": "singleConditionBean",
                            "type": "object"
                          },
                          {
                            "properties": {
                              "conditions": {
                                "items": {
                                  "$ref": "#"
                                },
                                "type": "array"
                              }
                            },
                            "id": "compositeConditionBean",
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "icon": {
                      "properties": {
                        "height": {
                          "type": "integer",
                          "description": "The height in pixels of the icon image."
                        },
                        "width": {
                          "type": "integer",
                          "description": "The width in pixels of the icon image."
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL of the icon. Your icon needs to be hosted remotely at a web-accessible location. You can specify the\n URL as an absolute URL or relative to the add-on's base URL."
                        }
                      },
                      "id": "iconBean",
                      "type": "object",
                      "description": "An optional icon to display with the link text or as the link, specified by URL to its hosted location.\n  You can specify a particular width and height for the icon. Most link icons in Atlassian applications\n  are 16 by 16 pixels."
                    },
                    "weight": {
                      "type": "integer",
                      "description": "Determines the order in which the page's link appears in the menu or list.\n\n The \"lightest\" weight (i.e., lowest number) appears first, rising relative to other items,\n while the \"heaviest\" weights sink to the bottom of the menu or list.\n\n Built-in web items have weights that are incremented by numbers that leave room for additional\n items, such as by 10 or 100. Be mindful of the weight you choose for your item, so that it appears\n in a sensible order given existing items."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location in the application interface where the page's link should appear. For the Atlassian application\n interface, a location is something like the coordinates on a map. It points to a particular drop-down menu or\n navigation list in the UI.\n\n Places in the Atlassian UI are identified by what are known as \"well-known locations.\"\n For example, the \"system.admin/globalsettings\" location is in the administrative\n menu link on the left side of the Administration Console."
                    },
                    "name": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object"
                    },
                    "params": {
                      "additionalProperties": true
                    },
                    "url": {
                      "type": "string",
                      "description": "Specifies the URL targeted by the page. The URL is relative to either the\n  the add-on's base URL"
                    }
                  },
                  "id": "connectPageModuleBean",
                  "type": "object",
                  "description": "Page modules are UI extension points that add-ons can use to insert content into various areas of the host\n application's interface. You implement a page module (along with the other type of module you can use with\n Atlassian Connect, webhooks) by declaring it in the add-on descriptor and implementing the add-on code that\n composes it.\n\n Each application has page module types that are specific for it, but there are some common page types as well.\n For instance, both JIRA and Confluence support the general-page and profile-page module, but only JIRA has the\n issue-panel-page.\n\n The page module takes care of integrating the add-on content into the application for you. The add-on content\n automatically gets the page styles and decorators from the host application.\n"
                },
                "type": "array",
                "title": "Admin Page"
              },
              "configurePages": {
                "items": {
                  "properties": {
                    "conditions": {
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "properties": {
                              "conditions": {
                                "items": {
                                  "$ref": "#"
                                },
                                "type": "array"
                              }
                            },
                            "id": "compositeConditionBean",
                            "type": "object"
                          },
                          {
                            "properties": {
                              "invert": {
                                "type": "boolean"
                              },
                              "condition": {
                                "type": "string"
                              },
                              "params": {
                                "additionalProperties": true
                              }
                            },
                            "id": "singleConditionBean",
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "icon": {
                      "properties": {
                        "height": {
                          "type": "integer",
                          "description": "The height in pixels of the icon image."
                        },
                        "width": {
                          "type": "integer",
                          "description": "The width in pixels of the icon image."
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL of the icon. Your icon needs to be hosted remotely at a web-accessible location. You can specify the\n URL as an absolute URL or relative to the add-on's base URL."
                        }
                      },
                      "id": "iconBean",
                      "type": "object"
                    },
                    "weight": {
                      "type": "integer"
                    },
                    "location": {
                      "type": "string"
                    },
                    "isDefault": {
                      "type": "boolean"
                    },
                    "name": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object"
                    },
                    "params": {
                      "additionalProperties": true
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "id": "configurePageModuleBean",
                  "type": "object",
                  "description": "A configure page module is a page module used to configure the addon itself.\n Other than that it is the same as other pages.\n\n If more than one configure page is specified, then exactly one of them must have the [default] field set.\n A 'configure' button will link to this page from the manage plugins administration console.\n\n If there is only one configure page specified then it will automatically be used regardless of the default field.\n\n If no configure page modules are specified then no configure button will be included on the install page.\n"
                },
                "type": "array",
                "title": "Configure Page"
              },
              "generalPages": {
                "items": {
                  "properties": {
                    "conditions": {
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "properties": {
                              "invert": {
                                "type": "boolean"
                              },
                              "condition": {
                                "type": "string"
                              },
                              "params": {
                                "additionalProperties": true
                              }
                            },
                            "id": "singleConditionBean",
                            "type": "object"
                          },
                          {
                            "properties": {
                              "conditions": {
                                "items": {
                                  "$ref": "#"
                                },
                                "type": "array"
                              }
                            },
                            "id": "compositeConditionBean",
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "icon": {
                      "properties": {
                        "height": {
                          "type": "integer",
                          "description": "The height in pixels of the icon image."
                        },
                        "width": {
                          "type": "integer",
                          "description": "The width in pixels of the icon image."
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL of the icon. Your icon needs to be hosted remotely at a web-accessible location. You can specify the\n URL as an absolute URL or relative to the add-on's base URL."
                        }
                      },
                      "id": "iconBean",
                      "type": "object",
                      "description": "An optional icon to display with the link text or as the link, specified by URL to its hosted location.\n  You can specify a particular width and height for the icon. Most link icons in Atlassian applications\n  are 16 by 16 pixels."
                    },
                    "weight": {
                      "type": "integer",
                      "description": "Determines the order in which the page's link appears in the menu or list.\n\n The \"lightest\" weight (i.e., lowest number) appears first, rising relative to other items,\n while the \"heaviest\" weights sink to the bottom of the menu or list.\n\n Built-in web items have weights that are incremented by numbers that leave room for additional\n items, such as by 10 or 100. Be mindful of the weight you choose for your item, so that it appears\n in a sensible order given existing items."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location in the application interface where the page's link should appear. For the Atlassian application\n interface, a location is something like the coordinates on a map. It points to a particular drop-down menu or\n navigation list in the UI.\n\n Places in the Atlassian UI are identified by what are known as \"well-known locations.\"\n For example, the \"system.admin/globalsettings\" location is in the administrative\n menu link on the left side of the Administration Console."
                    },
                    "name": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object"
                    },
                    "params": {
                      "additionalProperties": true
                    },
                    "url": {
                      "type": "string",
                      "description": "Specifies the URL targeted by the page. The URL is relative to either the\n  the add-on's base URL"
                    }
                  },
                  "id": "connectPageModuleBean",
                  "type": "object",
                  "description": "Page modules are UI extension points that add-ons can use to insert content into various areas of the host\n application's interface. You implement a page module (along with the other type of module you can use with\n Atlassian Connect, webhooks) by declaring it in the add-on descriptor and implementing the add-on code that\n composes it.\n\n Each application has page module types that are specific for it, but there are some common page types as well.\n For instance, both JIRA and Confluence support the general-page and profile-page module, but only JIRA has the\n issue-panel-page.\n\n The page module takes care of integrating the add-on content into the application for you. The add-on content\n automatically gets the page styles and decorators from the host application.\n"
                },
                "type": "array",
                "title": "General Page"
              },
              "profilePages": {
                "items": {
                  "properties": {
                    "conditions": {
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "properties": {
                              "invert": {
                                "type": "boolean"
                              },
                              "condition": {
                                "type": "string"
                              },
                              "params": {
                                "additionalProperties": true
                              }
                            },
                            "id": "singleConditionBean",
                            "type": "object"
                          },
                          {
                            "properties": {
                              "conditions": {
                                "items": {
                                  "$ref": "#"
                                },
                                "type": "array"
                              }
                            },
                            "id": "compositeConditionBean",
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "icon": {
                      "properties": {
                        "height": {
                          "type": "integer",
                          "description": "The height in pixels of the icon image."
                        },
                        "width": {
                          "type": "integer",
                          "description": "The width in pixels of the icon image."
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL of the icon. Your icon needs to be hosted remotely at a web-accessible location. You can specify the\n URL as an absolute URL or relative to the add-on's base URL."
                        }
                      },
                      "id": "iconBean",
                      "type": "object",
                      "description": "An optional icon to display with the link text or as the link, specified by URL to its hosted location.\n  You can specify a particular width and height for the icon. Most link icons in Atlassian applications\n  are 16 by 16 pixels."
                    },
                    "weight": {
                      "type": "integer",
                      "description": "Determines the order in which the page's link appears in the menu or list.\n\n The \"lightest\" weight (i.e., lowest number) appears first, rising relative to other items,\n while the \"heaviest\" weights sink to the bottom of the menu or list.\n\n Built-in web items have weights that are incremented by numbers that leave room for additional\n items, such as by 10 or 100. Be mindful of the weight you choose for your item, so that it appears\n in a sensible order given existing items."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location in the application interface where the page's link should appear. For the Atlassian application\n interface, a location is something like the coordinates on a map. It points to a particular drop-down menu or\n navigation list in the UI.\n\n Places in the Atlassian UI are identified by what are known as \"well-known locations.\"\n For example, the \"system.admin/globalsettings\" location is in the administrative\n menu link on the left side of the Administration Console."
                    },
                    "name": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object"
                    },
                    "params": {
                      "additionalProperties": true
                    },
                    "url": {
                      "type": "string",
                      "description": "Specifies the URL targeted by the page. The URL is relative to either the\n  the add-on's base URL"
                    }
                  },
                  "id": "connectPageModuleBean",
                  "type": "object",
                  "description": "Page modules are UI extension points that add-ons can use to insert content into various areas of the host\n application's interface. You implement a page module (along with the other type of module you can use with\n Atlassian Connect, webhooks) by declaring it in the add-on descriptor and implementing the add-on code that\n composes it.\n\n Each application has page module types that are specific for it, but there are some common page types as well.\n For instance, both JIRA and Confluence support the general-page and profile-page module, but only JIRA has the\n issue-panel-page.\n\n The page module takes care of integrating the add-on content into the application for you. The add-on content\n automatically gets the page styles and decorators from the host application.\n"
                },
                "type": "array",
                "title": "User Profile Page"
              },
              "webItems": {
                "items": {
                  "properties": {
                    "conditions": {
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "properties": {
                              "invert": {
                                "type": "boolean"
                              },
                              "condition": {
                                "type": "string"
                              },
                              "params": {
                                "additionalProperties": true
                              }
                            },
                            "id": "singleConditionBean",
                            "type": "object"
                          },
                          {
                            "properties": {
                              "conditions": {
                                "items": {
                                  "$ref": "#"
                                },
                                "type": "array"
                              }
                            },
                            "id": "compositeConditionBean",
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "icon": {
                      "properties": {
                        "height": {
                          "type": "integer",
                          "description": "The height in pixels of the icon image."
                        },
                        "width": {
                          "type": "integer",
                          "description": "The width in pixels of the icon image."
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL of the icon. Your icon needs to be hosted remotely at a web-accessible location. You can specify the\n URL as an absolute URL or relative to the add-on's base URL."
                        }
                      },
                      "id": "iconBean",
                      "type": "object",
                      "description": "An optional icon to display with the link text or as the link, specified by URL to its hosted location.\n  You can specify a particular width and height for the icon. Most link icons in Atlassian applications\n  are 16 by 16 pixels."
                    },
                    "styleClasses": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array",
                      "description": "Specifies custom styles for the web link target page, if desired. By default, the web item content gets\n styled in the default style of the target application."
                    },
                    "weight": {
                      "type": "integer",
                      "description": "Determines the order in which the web item appears in the menu or list.\n\n <p/>\n\n The \"lightest\" weight (i.e., lowest number) appears first, rising relative to other items,\n while the \"heaviest\" weights sink to the bottom of the menu or list.\n\n <p/>\n\n Built-in web items have weights that are incremented by numbers that leave room for additional\n items, such as by 10 or 100. Be mindful of the weight you choose for your item, so that it appears\n in a sensible order given existing items."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location in the application interface where the web item should appear. For the Atlassian application\n interface, a location is something like the coordinates on a map. It points to a particular drop-down menu or\n navigation list in the UI.\n\n <p/>\n\n Places in the Atlassian UI are identified by what are known as \"well-known locations.\"\n For example, the \"system.admin/globalsettings\" location is in the administrative\n menu link on the left side of the Administration Console."
                    },
                    "name": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object"
                    },
                    "link": {
                      "type": "string",
                      "description": "Specifies the URL targeted by the link. The URL can be absolute or relative to either the\n  product URL or the add-on's base URL, depending on the {@link AddOnUrlContext} parameter."
                    },
                    "target": {
                      "properties": {
                        "params": {
                          "additionalProperties": true
                        },
                        "type": {
                          "enum": [
                            "page",
                            "dialog",
                            "inlinedialog"
                          ],
                          "type": "string"
                        },
                        "options": {
                          "additionalProperties": true
                        }
                      },
                      "id": "webItemTargetBean",
                      "type": "object",
                      "description": "Defines the way the link is opened in the browser, such as in a modal or inline dialog.\n  If omitted, the link behaves as a regular hyperlink."
                    },
                    "context": {
                      "enum": [
                        "addon",
                        "product"
                      ],
                      "type": "string",
                      "description": "The context for the URL parameter, if the URL is specified as a relative (not absolute) URL.\n\n <p/>\n\n  This context can be either \"add-on\", which renders the URL relative to the add-on's base URL, or\n  \"product\", which renders the URL relative to the product's base URL."
                    },
                    "params": {
                      "additionalProperties": true
                    },
                    "tooltip": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object",
                      "description": "The internationalised text to be used in the link's tooltip."
                    }
                  },
                  "id": "webItemModuleBean",
                  "type": "object",
                  "title": "Web Item",
                  "description": "Adds a web item to a specified location in the application interface. A web item is a hyperlink\n that’s inserted into some standard place in the Atlassian application interface, such as the\n administration menu.\n\n <p/>\n\n The form that the link takes can vary depending on the location. For instance, a web item in the header bar\n (with a location section of system.top.navigation.bar) adds a link to the navigation bar across the top of the\n interface. On the other hand, a web item in the opsbar-operation location section in JIRA adds an item to the issue\n operation buttons.\n\n <p/>\n\n A web item link can open a new page in the application or a dialog, depending on your configuration.\n\n <p/>\n\n Web links are a simple and useful way to extend Atlassian applications. If you want to extend an Atlassian\n application and don't know where to start, a web item may be all you need.\n"
                },
                "type": "array"
              },
              "webPanels": {
                "items": {
                  "properties": {
                    "conditions": {
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "properties": {
                              "invert": {
                                "type": "boolean"
                              },
                              "condition": {
                                "type": "string"
                              },
                              "params": {
                                "additionalProperties": true
                              }
                            },
                            "id": "singleConditionBean",
                            "type": "object"
                          },
                          {
                            "properties": {
                              "conditions": {
                                "items": {
                                  "$ref": "#"
                                },
                                "type": "array"
                              }
                            },
                            "id": "compositeConditionBean",
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "weight": {
                      "type": "integer",
                      "description": "Determines the order in which web panels appear. Web panels are displayed top to bottom or left to right in\n  order of ascending weight. The \"lightest\" weight is displayed first, while the \"heaviest\" weights sink to the\n  bottom. The weight values for most panels start from 100, and the weights for the links\n  generally start from 10. The weight is incremented by 10 for each in sequence to leave room for custom\n  panels."
                    },
                    "location": {
                      "type": "string",
                      "description": "Location in the application interface for this panel."
                    },
                    "name": {
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "i18n": {
                          "type": "string"
                        }
                      },
                      "id": "i18nProperty",
                      "type": "object"
                    },
                    "layout": {
                      "properties": {
                        "height": {
                          "type": "string"
                        },
                        "width": {
                          "type": "string"
                        }
                      },
                      "id": "webPanelLayout",
                      "type": "object",
                      "description": "The width and height of the web panel on the page."
                    },
                    "params": {
                      "additionalProperties": true
                    },
                    "url": {
                      "type": "string",
                      "description": "The URL of the add-on resource that provides the web panel content."
                    }
                  },
                  "id": "webPanelModuleBean",
                  "type": "object",
                  "title": "Web Panel",
                  "description": "Adds a panel (or section) to a page in the Atlassian application. Panels let you present related information and\n controls in the application interface as a group. For example, the existing \"People\" panel in JIRA issue view\n shows the assignee, reporter, and similar information for the issue.\n"
                },
                "type": "array"
              },
              "webhooks": {
                "items": {
                  "properties": {
                    "event": {
                      "type": "string",
                      "description": "Specifies the named event you would like to listen to (e.g., \"enabled\", \"jira:issue_created\", etc.)"
                    },
                    "params": {
                      "additionalProperties": true
                    },
                    "url": {
                      "type": "string",
                      "description": "Specifies your add-on's POST webhook handler URL. This property has to be a relative URL."
                    }
                  },
                  "id": "webHookModuleBean",
                  "type": "object",
                  "title": "Webhooks",
                  "description": "A webhook is a standard mechanism for implementing HTTP callbacks. Atlassian OnDemand applications can execute\n webhooks that your add-ons can use to be notified of certain events that happen in JIRA or Confluence.\n\n Just to give you an idea of how you can use them in add-ons, here are a few sample webhook events:\n\n * When an add-on is enabled or disabled\n * When an issue is created or closed in JIRA\n * When a page is created or updated in Confluence\n\n While some webhooks are specific to the Atlassian application, JIRA or Confluence, others are common to all\n applications. This type includes, for example, the webhooks that generate notifications when the add-on is enabled.\n\n Most add-ons should implement the remote_plugin_enabled webhook. The Atlassian application uses this event to supply\n its public key to the add-on. The Authenticating with OAuth page shows an example of how to use this webhook.\n\n ### Handling the webhook event\n\n To receive webhook events, your add-on needs to include the webhook module declaration in its JSON descriptor. The\n declaration indicates the relative URL of the local resource at which it will receive the notification. In other\n words, the Atlassian application will send an HTTP POST to this resource in response to an application event. The\n add-on code that handles the POST should process any information passed in the body of the message, as appropriate.\n Each webhook POST sent to the add-on will also include the authentication headers that allow the add-on to\n validate the authenticity of that request.\n\n #### Sample webhooks JSON block\n\n     {\n         \"webhooks\": [\n             {\n                 \"event\": \"jira:issue_created\",\n                 \"url\": \"/issue-created\"\n             },\n             ...\n             {\n                 \"event\": \"jira:issue_updated\",\n                 \"url\": \"/issue-updated\"\n             }\n         ]\n     }\n\n ### Webhook event types\n\n To find out what webhooks are available for each application, the best place to look is in the Interactive\n Descriptor Guide [JIRA](https://developer.atlassian.com/connect/api/jira) or\n [Confluence](https://developer.atlassian.com/connect/api/confluence).\n\n ### Inspecting webhook contents\n\n Each type of webhook event includes information specific to that event in the body content of the POST message. The\n add-on resource that listens for webhook posts should receive and process the content as appropriate for the add-on.\n To understand what type of content each webhook generates, you can use the webhook inspector tool.\n\n The <a href=\"https://bitbucket.org/atlassianlabs/webhook-inspector\">Webhook Inspector</a> is a\n <a href=\"https://bitbucket.org/atlassian/atlassian-connect-express\">atlassian-connect-express</a> Connect add-on\n that you can install in your development environment to inspect the content of event messages. The Webhook Inspector\n subscribes and generates each webhook event type available on the running instance of the Atlassian application,\n and prints the body posted by the instance to the console screen.\n"
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "id": "moduleList",
            "type": "object",
            "description": "This class represents the list of modules in the json descriptor.\n Every new module type needs to be added here as a private field and annotated with @ConnectModule\n \n The field name will be what appears in the json.\n \n Note: this class does NOT have a builder. Instead the {@link ConnectAddonBean} has a special reflective builder\n that will handle adding beans to the proper fields in this class by name and type.\n You can buy me a beer later for that little trick when you realize you don't need to keep updating a builder everytime you add a new type here.\n"
          },
          "key": {
            "type": "string",
            "description": "The plugin key for the add on"
          },
          "version": {
            "type": "string"
          }
        },
        "$schema": "http://json-schema.org/draft-04/schema#",
        "id": "connectAddonBean",
        "type": "object",
        "title": "Connect Addon Root Descriptor",
        "description": "The root descriptor for an Atlassian Connect add on\n \n Json Example:\n{\n  \"key\": \"my-addon-key\",\n  \"name\": \"My Connect Addon\",\n  \"version\": \"1.0\",\n  \"description\": \"A connect addon that does something\",\n  \"vendor\": {\n    \"name\": \"My Company\",\n    \"url\": \"http://www.example.com\"\n  },\n  \"links\": {\n    \"self\": \"http://www.example.com/connect/jira\"\n  },\n  \"baseUrl\": \"http://www.example.com/connect/jira\",\n  \"authentication\": {\n    \"type\": \"jwt\"\n  },\n  \"modules\": {}\n}"
      }
    }
  }
}