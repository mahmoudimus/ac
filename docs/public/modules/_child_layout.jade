h1
    = module.name

h2 Properties

table.aui
    thead
        tr
          th Name
          th Type
          th Description
      tbody
        - each prop in module.properties
            tr
                td
                    = prop.key
                td
                    - if (prop.type === 'object')
                        a(href = '/' + entityLinks[prop.id] + '.html')
                            - if (prop.title)
                                span.aui-lozenge
                                    = prop.title
                            - else
                                span.aui-lozenge
                                    = prop.id
                    - else if (prop.type === 'array')
                        | [&nbsp;
                        a(href = '/' + entityLinks[prop.id] + '.html')
                            span.aui-lozenge
                                = prop.id
                        | , ... ]
                    - else
                        span.aui-lozenge
                            = prop.type
                        - if (prop.type === 'string' && prop.format)
                            p
                            span.aui-lozenge
                                = prop.format
                        - else if (prop.type === 'string' && prop.pattern)
                            p
                            span.aui-lozenge
                                = prop.pattern
                td
                    div
                        = prop.description
                    - if (prop.required)
                        span.aui-lozenge Required
                    - if (prop.enum)
                        div
                            strong Valid values:
                            - each value in prop.enum
                                | &nbsp;
                                span.aui-lozenge
                                    = value
                    - if (prop.defaultValue)
                        div
                            strong Default value:
                            span &nbsp;
                                = prop.defaultValue

//- h2 JSON Schema
//- textarea.code
//-     != JSON.stringify(capability,null,2)

script.
    var cmOpts = {
        mode: "javascript",
        theme: "neat",
        lineNumbers:true,
        gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter'],
        indentWithTabs:false,
        electricChars:true,
        matchBrackets:true,
        autoCloseBrackets:true,
        highlightSelectionMatches:true,
        indentUnit:2,
        lineWrapping: true,
        readOnly:true
    };
    $('.code').each(function(){
        CodeMirror.fromTextArea(this, cmOpts);
    });

    function cmIfyPreCodeBlocks(block){
        var sample = block;
        var text = sample.textContent || sample.innerText;
        var newOpts = cmOpts;
        newOpts.value = text;
        CodeMirror(
            function(node){
                sample.parentNode.replaceChild(node, sample)
            }, newOpts
        );
    }
    $('pre code').each(function(){cmIfyPreCodeBlocks(this)});