package com.atlassian.plugin.connect.jira.field.option;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;

import static com.google.common.base.Preconditions.checkNotNull;

public final class ConnectFieldOptionScope {
    public static final ConnectFieldOptionScope GLOBAL = new ConnectFieldOptionScope(null);

    @Nullable
    private final Long projectId;

    public static ConnectFieldOptionScope project(@Nonnull Long projectId) {
        return new ConnectFieldOptionScope(checkNotNull(projectId));
    }

// The code below has been generated by Bob the Builder of Beans based on the class' fields.
// Everything after this comment will be regenerated if you invoke Bob again.
// If you don't know who Bob the Builder of Beans is, you can find him here: https://bitbucket.org/atlassian/bob

    private ConnectFieldOptionScope(@Nullable Long projectId) {
        this.projectId = projectId;
    }

    public Optional<Long> getProjectId() {
        return Optional.ofNullable(projectId);
    }

    public static ConnectFieldOptionScope.Builder builder() {
        return new ConnectFieldOptionScope.Builder();
    }

    public static ConnectFieldOptionScope.Builder builder(ConnectFieldOptionScope data) {
        return new ConnectFieldOptionScope.Builder(data);
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        ConnectFieldOptionScope that = (ConnectFieldOptionScope) o;

        return Objects.equals(this.getProjectId(), that.getProjectId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getProjectId());
    }

    @Override
    public String toString() {
        return com.google.common.base.Objects.toStringHelper(this)
                .add("projectId", getProjectId())
                .toString();
    }

    public static final class Builder {

        private Long projectId;

        private Builder() {}

        private Builder(ConnectFieldOptionScope initialData) {

            this.projectId = initialData.getProjectId().orElse(null);
        }


        public Builder setProjectId(Long projectId) {
            this.projectId = projectId;
            return this;
        }

        public ConnectFieldOptionScope build() {
            return new ConnectFieldOptionScope(projectId);
        }
    }
}
