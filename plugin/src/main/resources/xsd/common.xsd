<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <xs:simpleType name="KeyType">
        <xs:restriction base="xs:string">
            <xs:pattern value="[-0-9a-zA-Z_.]{2,50}"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="I18NKeyType">
        <xs:restriction base="xs:string">
            <xs:pattern value="[-0-9a-zA-Z_.]{2,120}"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="NameType">
        <xs:restriction base="xs:string">
            <xs:minLength value="3"/>
            <xs:maxLength value="50"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="VersionType">
        <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="20"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="WeightType">
        <xs:restriction base="xs:integer"/>
    </xs:simpleType>

    <xs:simpleType name="HttpUrlType">
        <xs:restriction base="xs:anyURI">
            <xs:pattern value="http[s]?://.*"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="RelativeUrlType">
        <xs:restriction base="xs:string">
            <xs:pattern value='/[^"]*'/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="ResourcePathType">
        <xs:restriction base="xs:string">
            <xs:pattern value='[^"]*'/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="AbsoluteOrRelativeUrlType">
        <xs:union memberTypes="RelativeUrlType HttpUrlType" />
    </xs:simpleType>

    <xs:simpleType name="ResourcePathOrHttpUrlType">
        <xs:union memberTypes="ResourcePathType HttpUrlType" />
    </xs:simpleType>

    <xs:simpleType name="UrlPatternType" >
        <xs:annotation>
            <xs:documentation>
                <p>The pattern of the URL to match. This element may be repeated.</p>
                <p>The URL pattern format is used in Atlassian plugin types to map them to URLs. On the
                    whole, the pattern rules are consistent with those defined in the Servlet 2.3 API. The
                    following wildcards are supported:
                    <ul>
                        <li><b>*</b> matches zero or many characters, including directory slashes</li>
                        <li><b>?</b> matches zero or one character</li>
                    </ul>
                </p>
                <p>Examples:
                    <ul>
                        <li>/mydir/* matches /mydir/myfile.xml</li>
                        <li>/*/admin/*.??ml matches /mydir/otherdir/admin/myfile.html</li>
                    </ul>
                </p>
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="DescriptionType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="key"
                              type="I18NKeyType">
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:simpleType name="PermissionValueType">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="PixelType">
        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9]{1,4}[%]?" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="LocationType">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="ConditionNameType">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="ResourceTypeType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="i18n"/>
            <xs:enumeration value="download"/>
            <xs:enumeration value="velocity"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="ResourceLocationType">
        <xs:restriction base="xs:string">
            <xs:pattern value="[a-zA-Z_0-9.]+"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="FilterLocationType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="after-encoding">
                <xs:annotation>
                    <xs:documentation>
                        Near the very top of the filter chain in the application, but after any filters which ensure the
                        integrity of the request.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="before-login">
                <xs:annotation>
                    <xs:documentation>
                        Before the filter that logs in the user with any authentication information included in the
                        request.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="before-decoration">
                <xs:annotation>
                    <xs:documentation>
                        Before the filter which does decoration of the response, typically with Sitemesh.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="before-dispatch">
                <xs:annotation>
                    <xs:documentation>
                        At the end of the filter.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="DispatcherType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="REQUEST">
                <xs:annotation>
                    <xs:documentation>the filter applies to requests that came directly from the client</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="INCLUDE">
                <xs:annotation>
                    <xs:documentation>the filter applies to server-side includes done via RequestDispatcher.include()</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FORWARD">
                <xs:annotation>
                    <xs:documentation>the filter applies to requests that are forwarded via RequestDispatcher.forward()</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ERROR">
                <xs:annotation>
                    <xs:documentation>the filter applies to requests that are handled by an error page</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="ClassType">
        <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="ConditionType">
        <xs:sequence>
            <xs:element name="param" type="ParamType" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        A condition parameter, if applicable to the permission type.  If a remote condition, the parameter
                        will be passed to the URL as a query parameter.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="class" type="ClassType" use="optional">
            <xs:annotation>
                <xs:documentation>
                    The fully qualified name of a Java class.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="name" type="ConditionNameType" use="optional">
            <xs:annotation>
                <xs:documentation>
                    The name of the static condition.  If used, the 'url' attribute must not be specified.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="url" type="RelativeUrlType" use="optional">
            <xs:annotation>
                <xs:documentation>
                    The URL to retrieve for the remote condition.  If used, the 'name' attribute must not be specified.
                    The URL must return a JSON object with a 'shouldDisplay' attribute set to 'true' or 'false'.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="invert" type="xs:boolean" default="false" use="optional">
            <xs:annotation>
                <xs:documentation>
                    Whether this condition should be inverted or not.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="ConditionsType">
        <xs:sequence>
            <xs:element name="condition" type="ConditionType" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ParamType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="name"
                              type="NameType">
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="MapType">
        <xs:sequence>
            <xs:element name="entry" type="MapEntryType" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="MapEntryType">
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="value" type="xs:string" use="required"/>
    </xs:complexType>
    
    <xs:complexType name="InitParamType">
        <xs:sequence>
            <xs:element name="param-name" type="xs:string" minOccurs="1" maxOccurs="1" />
            <xs:element name="param-value" type="xs:string" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>
</xs:schema>