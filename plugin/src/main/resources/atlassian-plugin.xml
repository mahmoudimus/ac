<atlassian-plugin key="${project.groupId}.${project.artifactId}" name="${project.name}" plugins-version="2">
    <plugin-info>
        <description>${project.description}</description>
        <version>${project.version}</version>
        <vendor name="${project.organization.name}" url="${project.organization.url}" />
    </plugin-info>

    <remote-module key="general-page" name="General Page" class="com.atlassian.labs.remoteapps.modules.page.GeneralPageModuleGenerator">
        <description>A non-admin general page decorated by the application, with a link in a globally-accessible place</description>
        <schema id="page.xsd" path="/xsd/page.xsd"  type="PageType"/>
    </remote-module>

    <remote-module key="admin-page" name="Administration Page" class="com.atlassian.labs.remoteapps.modules.page.AdminPageModuleGenerator">
        <description>An admin page page decorated in the admin section, with a link in the admin menu</description>
        <schema id="page.xsd" path="/xsd/page.xsd" type="PageType" />
    </remote-module>

    <remote-module key="entity-type" name="Entity Type" class="com.atlassian.labs.remoteapps.modules.applinks.EntityTypeModuleGenerator">
        <description>
            An application links entity type used for storing the relationship with a local application entity like
            a JIRA project or Confluence space with a similar entity in the Remote App
        </description>
        <schema id="entity.xsd" path="/xsd/entity.xsd" type="EntityTypeType"/>
    </remote-module>

    <remote-module key="oauth" name="OAuth" class="com.atlassian.labs.remoteapps.modules.oauth.OauthModuleGenerator">
        <description>
            Creates an outgoing oauth link to allow the host application to call the Remote App in an authenticated manner
        </description>
        <schema id="oauth.xsd" path="/xsd/oauth.xsd" type="OauthType" maxOccurs="1"/>
    </remote-module>

    <remote-module key="permissions" name="Permissions" class="com.atlassian.labs.remoteapps.modules.permissions.PermissionsModuleGenerator">
        <description>
            Defines API scopes for incoming authenticated requests
        </description>
        <schema id="permissions.xsd" path="/xsd/permissions.xsd" type="PermissionsType" maxOccurs="1"
                class="com.atlassian.labs.remoteapps.modules.permissions.scope.ApiScopeSchema"/>
    </remote-module>

    <remote-module key="description" name="Description" class="com.atlassian.labs.remoteapps.modules.plugin.DescriptorModuleGenerator">
        <description>Defines the Remote App description</description>
        <schema id="description.xsd" path="/xsd/description.xsd" type="DescriptionType" maxOccurs="1"/>
    </remote-module>

    <remote-module key="vendor" name="Vendor" class="com.atlassian.labs.remoteapps.modules.plugin.VendorModuleGenerator">
        <description>Defines the remote app vendor information</description>
        <schema id="vendor.xsd" path="/xsd/vendor.xsd" type="VendorType" maxOccurs="1"/>
    </remote-module>

    <servlet-filter key="fixAuthenticateHeader" class="com.atlassian.labs.remoteapps.installer.FixAuthenticateHeaderFilter"
            location="after-encoding">
        <url-pattern>/rest/remoteapps/*</url-pattern>
    </servlet-filter>
    <servlet-filter key="iframe-resources" class="com.atlassian.labs.remoteapps.iframe.StaticResourcesFilter"
            location="after-encoding">
        <url-pattern>/remoteapps/*</url-pattern>
    </servlet-filter>

    <servlet-filter key="api-scoping" class="com.atlassian.labs.remoteapps.modules.permissions.ApiScopingFilter"
            location="before-login">
        <url-pattern>/*</url-pattern>
    </servlet-filter>

    <servlet-filter key="oauth-2lo-authentication" class="com.atlassian.labs.remoteapps.modules.oauth.OAuth2LOFilter"
            location="after-encoding">
        <url-pattern>/*</url-pattern>
    </servlet-filter>

    <module-type key="remote-app" class="com.atlassian.labs.remoteapps.descriptor.RemoteAppModuleDescriptor" />

    <web-resource key="xdm">
        <context>remoteapps-iframe</context>
        <dependency>com.atlassian.auiplugin:ajs</dependency>
        <resource type="download" name="easyXDM.js" location="/js/iframe/easyXDM.js" />
    </web-resource>

    <web-resource key="iframe">
        <resource type="download" name="easyXDM.js" location="/js/iframe/easyXDM.js" />
        <resource type="download" name="main.js" location="/js/iframe/main.js" />
    </web-resource>

    <commonjs key="speakeasy-commonjs" location="/js/speakeasy" />

    <web-resource key="speakeasy-integration">
        <context>speakeasy.user-profile</context>
        <dependency>com.atlassian.labs.remoteapps-plugin:remoteapps_installer</dependency>
    </web-resource>

    <web-item key="speakeasy-install" section="speakeasy.user-profile/actions" weight="100">
        <label>Install Remote App</label>
        <link linkId="rp-install" />
        <condition class="com.atlassian.labs.remoteapps.descriptor.CanInstallRemoteAppsCondition" />
    </web-item>

    <component key="httpContentRetriever" class="com.atlassian.labs.remoteapps.util.http.CachingHttpContentRetriever"
               public="true" interface="com.atlassian.labs.remoteapps.util.http.HttpContentRetriever" />

    <component key="startableForPlugins" class="com.atlassian.labs.remoteapps.descriptor.StartableForPlugins" public="true"
               interface="com.atlassian.sal.api.lifecycle.LifecycleAware" />

    <component-import key="templateRenderer" interface="com.atlassian.templaterenderer.TemplateRenderer"/>
    <component-import key="servletModuleManager" interface="com.atlassian.plugin.servlet.ServletModuleManager" />
    <component-import key="webInterfaceManager" interface="com.atlassian.plugin.web.WebInterfaceManager" />
    <component-import key="pluginRetrievalService" interface="com.atlassian.plugin.osgi.bridge.external.PluginRetrievalService" />
    <component-import key="oauthConsumerService" interface="com.atlassian.oauth.consumer.ConsumerService" />
    <component-import key="requestFactory" interface="com.atlassian.sal.api.net.RequestFactory" />
    <component-import key="pluginController" interface="com.atlassian.plugin.PluginController" />
    <component-import key="applicationProperties" interface="com.atlassian.sal.api.ApplicationProperties" />
    <component-import key="serviceProviderConsumerStore" interface="com.atlassian.oauth.serviceprovider.ServiceProviderConsumerStore" />
    <component-import key="applicationLinkService" interface="com.atlassian.applinks.spi.link.MutatingApplicationLinkService" />
    <component-import key="authenticationConfigurationManager" interface="com.atlassian.applinks.spi.auth.AuthenticationConfigurationManager" />
    <component-import key="userManager" interface="com.atlassian.sal.api.user.UserManager" />
    <component-import key="authenticationListener" interface="com.atlassian.sal.api.auth.AuthenticationListener" />
    <component-import key="authenticationController" interface="com.atlassian.sal.api.auth.AuthenticationController" />
    <component-import key="transactionTemplate" interface="com.atlassian.sal.api.transaction.TransactionTemplate" />
    <component-import key="pluginEventManager" interface="com.atlassian.plugin.event.PluginEventManager" />
    <component-import key="pluginAccessor" interface="com.atlassian.plugin.PluginAccessor" />
    <component-import key="webResourceManager" interface="com.atlassian.plugin.webresource.WebResourceManager" />
    <component-import key="eventPublisher" interface="com.atlassian.event.api.EventPublisher" />
    <component-import key="i18nResolver" interface="com.atlassian.sal.api.message.I18nResolver" />
    <component-import key="pluginSettingsFactory" interface="com.atlassian.sal.api.pluginsettings.PluginSettingsFactory" />
    <component-import key="typeAccessor" interface="com.atlassian.applinks.spi.util.TypeAccessor" />

    <module-type key="api-scope" class="com.atlassian.labs.remoteapps.descriptor.external.ApiScopeModuleDescriptor" />

    <module-type key="access-level" class="com.atlassian.labs.remoteapps.descriptor.external.AccessLevelModuleDescriptor" />
    <module-type key="remote-module" class="com.atlassian.labs.remoteapps.descriptor.external.RemoteModuleDescriptor" />

    <access-level key="global" class="com.atlassian.labs.remoteapps.GlobalAccessLevel" />

    <!-- product-specific modules included via xslt build process -->

</atlassian-plugin>
