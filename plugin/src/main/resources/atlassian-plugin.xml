<atlassian-plugin key="${project.groupId}.${project.artifactId}" name="${project.name}" plugins-version="2">
    <plugin-info>
        <description>${project.description}</description>
        <version>${project.version}</version>
        <vendor name="${project.organization.name}" url="${project.organization.url}" />
    </plugin-info>

    <servlet-filter key="requestIdSetter" class="com.atlassian.labs.remoteapps.util.http.bigpipe.RequestIdSettingFilter"
                    location="after-encoding">
        <url-pattern>/*</url-pattern>
    </servlet-filter>

    <servlet-filter key="iframe-resources" class="com.atlassian.labs.remoteapps.iframe.StaticResourcesFilter"
            location="after-encoding">
        <url-pattern>/remoteapps/*</url-pattern>
    </servlet-filter>

    <servlet-filter key="universal-binary-dispatching" class="bean:ubDispatchFilter"
                    location="after-encoding" weight="1000">
        <url-pattern>/app/*</url-pattern>
    </servlet-filter>

    <servlet-filter key="api-scoping" class="com.atlassian.labs.remoteapps.modules.permissions.ApiScopingFilter"
            location="before-decoration">
        <url-pattern>/*</url-pattern>
    </servlet-filter>

    <servlet-filter key="oauth-2lo-authentication" class="com.atlassian.labs.remoteapps.modules.oauth.OAuth2LOFilter"
            location="after-encoding" weight="2000">
        <url-pattern>/*</url-pattern>
    </servlet-filter>

    <servlet key="remoteApps2LORedirectingServlet"
             name="Remote Apps 2-Legged OAuth Signing and Redirecting Servlet"
             class="com.atlassian.labs.remoteapps.modules.util.redirect.RedirectServlet">
        <description>Redirects to Remote Apps, using 2-legged OAuth to sign the outgoing request.  Request parameters are included in the redirect.</description>
        <url-pattern>/redirect/oauth</url-pattern>
    </servlet>
    <servlet key="remoteAppsPermanentRedirectingServlet"
             name="Remote Apps Permanent Redirecting Servlet"
             class="com.atlassian.labs.remoteapps.modules.util.redirect.RedirectServlet">
        <description>
            Redirects to a Pemote App resource, usually an image, with a permanent redirect, but
            doesn't sign the request.  Request parameters are included in the redirect.
        </description>
        <url-pattern>/redirect/permanent</url-pattern>
    </servlet>

    <web-resource key="iframe-host">
        <resource type="download" name="easyXDM.js" location="/js/iframe/easyXDM.js" />
        <resource type="download" name="body.js" location="/js/iframe/container/body.js" />
    </web-resource>

    <web-resource key="iframe-requirements">
        <context>remoteapps-iframe</context>
        <dependency>com.atlassian.auiplugin:ajs</dependency>
    </web-resource>

    <web-resource key="dialog">
        <resource type="download" name="dialog.js" location="js/dialog/dialog.js" />
        <dependency>com.atlassian.auiplugin:ajs</dependency>
    </web-resource>

    <web-resource key="images">
        <resource type="download" name="images/" location="images/" />
    </web-resource>

    <web-resource key="dialog-page-resource">
        <resource type="download" name="dialog-binder.js" location="/js/dialog/binder.js" />
        <context>atl.general</context>
        <context>atl.admin</context>
        <dependency>com.atlassian.auiplugin:ajs</dependency>
        <dependency>${project.groupId}.${project.artifactId}:dialog</dependency>
    </web-resource>

    <web-resource key="smoke-test">
        <resource type="download" content-type="application/xml" name="atlassian-remote-app.xml" location="/remoteapps-smoke-test/atlassian-remote-app.xml" />
        <resource type="download" name="general-page.html" content-type="text/html" location="/remoteapps-smoke-test/general-page.html" />
        <transformation extension="xml">
            <transformer key="baseUrlTransformer"/>
        </transformation>
    </web-resource>

    <web-resource key="schema-xsl">
        <resource type="download" content-type="application/xml" name="xs3p.xsl" location="/xsd/xs3p.xsl"/>
    </web-resource>

    <web-resource-transformer key="baseUrlTransformer" class="com.atlassian.labs.remoteapps.integration.smoketest.BaseUrlTransformer"/>

    <component key="httpContentRetriever" class="com.atlassian.labs.remoteapps.util.http.CachingHttpContentRetriever"
               public="true" interface="com.atlassian.labs.remoteapps.util.http.HttpContentRetriever" />

    <component key="startableForPlugins" class="com.atlassian.labs.remoteapps.loader.StartableForPlugins" public="true"
               interface="com.atlassian.sal.api.lifecycle.LifecycleAware" />

    <component key="productEventPublisher" class="com.atlassian.labs.remoteapps.event.product.ProductEventPublisher"
               public="true" interface="com.atlassian.sal.api.lifecycle.LifecycleAware" />

    <component key="descriptorGenerator" class="com.atlassian.labs.remoteapps.loader.LocalHttpResourceMounterServiceFactory" interface="com.atlassian.labs.remoteapps.api.HttpResourceMounter" public="true" />

    <component key="remotappsService" class="com.atlassian.labs.remoteapps.DefaultRemoteAppsService"
               interface="com.atlassian.labs.remoteapps.api.RemoteAppsService" public="true" />

    <component-import key="templateRenderer" interface="com.atlassian.templaterenderer.TemplateRenderer"/>
    <component-import key="servletModuleManager" interface="com.atlassian.plugin.servlet.ServletModuleManager" />
    <component-import key="webInterfaceManager" interface="com.atlassian.plugin.web.WebInterfaceManager" />
    <component-import key="pluginRetrievalService" interface="com.atlassian.plugin.osgi.bridge.external.PluginRetrievalService" />
    <component-import key="oauthConsumerService" interface="com.atlassian.oauth.consumer.ConsumerService" />
    <component-import key="requestFactory" interface="com.atlassian.sal.api.net.RequestFactory" />
    <component-import key="pluginController" interface="com.atlassian.plugin.PluginController" />
    <component-import key="applicationProperties" interface="com.atlassian.sal.api.ApplicationProperties" />
    <component-import key="serviceProviderConsumerStore" interface="com.atlassian.oauth.serviceprovider.ServiceProviderConsumerStore" />
    <component-import key="applicationLinkService" interface="com.atlassian.applinks.spi.link.MutatingApplicationLinkService" />
    <component-import key="authenticationConfigurationManager" interface="com.atlassian.applinks.spi.auth.AuthenticationConfigurationManager" />
    <component-import key="userManager" interface="com.atlassian.sal.api.user.UserManager" />
    <component-import key="authenticationListener" interface="com.atlassian.sal.api.auth.AuthenticationListener" />
    <component-import key="authenticationController" interface="com.atlassian.sal.api.auth.AuthenticationController" />
    <component-import key="transactionTemplate" interface="com.atlassian.sal.api.transaction.TransactionTemplate" />
    <component-import key="pluginEventManager" interface="com.atlassian.plugin.event.PluginEventManager" />
    <component-import key="pluginAccessor" interface="com.atlassian.plugin.PluginAccessor" />
    <component-import key="webResourceManager" interface="com.atlassian.plugin.webresource.WebResourceManager" />
    <component-import key="eventPublisher" interface="com.atlassian.event.api.EventPublisher" />
    <component-import key="i18nResolver" interface="com.atlassian.sal.api.message.I18nResolver" />
    <component-import key="pluginSettingsFactory" interface="com.atlassian.sal.api.pluginsettings.PluginSettingsFactory" />
    <component-import key="typeAccessor" interface="com.atlassian.applinks.spi.util.TypeAccessor" />
    <component-import key="webResourceUrlProvider" interface="com.atlassian.plugin.webresource.WebResourceUrlProvider" />

    <!-- Cross-product API Scopes -->
    <component key="applinks-read_app_links" class="com.atlassian.labs.remoteapps.product.ReadAppLinksScope"/>
    <component key="applinks-modify_app_link" class="com.atlassian.labs.remoteapps.product.ModifyAppLinkScope" />

    <!-- speakeasy integration -->
    <commonjs key="speakeasy-commonjs" location="/js/speakeasy" />

    <web-resource key="speakeasy-integration">
        <context>speakeasy.user-profile</context>
        <dependency>com.atlassian.labs.remoteapps-plugin:remoteapps_installer</dependency>
    </web-resource>

    <web-item key="speakeasy-install" section="speakeasy.user-profile/actions" weight="100">
        <label>Install Remote App</label>
        <link linkId="rp-insapptall" />
        <condition class="com.atlassian.labs.remoteapps.integration.speakeasy.CanInstallRemoteAppsCondition" />
    </web-item>

    <!-- universal binary services -->
    <component key="pluginSettingsAsyncFactory" interface="com.atlassian.labs.remoteapps.api.services.PluginSettingsAsyncFactory"
               class="com.atlassian.labs.remoteapps.services.PluginSettingsAsyncFactoryBean" public="true" />

    <component key="localSignedRequestHandler" interface="com.atlassian.labs.remoteapps.api.services.SignedRequestHandler"
               class="com.atlassian.labs.remoteapps.services.LocalSignedRequestHandlerServiceFactory" public="true" />

    <component key="requestContext" interface="com.atlassian.labs.remoteapps.api.services.RequestContext"
               class="com.atlassian.labs.remoteapps.api.services.RequestContextServiceFactory" public="true" />

    <component key="requestKiller"
               class="com.atlassian.labs.remoteapps.api.services.http.impl.RequestKiller" />

    <component key="asyncHttpClient" interface="com.atlassian.labs.remoteapps.api.services.http.AsyncHttpClient"
               class="com.atlassian.labs.remoteapps.api.services.http.impl.DefaultAsyncHttpClient" public="true" />

    <component key="localHostHttpClient" interface="com.atlassian.labs.remoteapps.api.services.http.HostHttpClient"
               class="com.atlassian.labs.remoteapps.services.LocalHostHttpClientServiceFactory" public="true" />

     <component key="syncHostHttpClient" interface="com.atlassian.labs.remoteapps.api.services.http.SyncHostHttpClient"
               class="com.atlassian.labs.remoteapps.api.services.http.SyncHostHttpClientServiceFactory" public="true" />

    <applinks-application-type name="Remote Plugin Container" key="remote-plugin-container-type"
                                   class="com.atlassian.labs.remoteapps.modules.applinks.RemotePluginContainerApplicationTypeImpl"
                                   interface="com.atlassian.labs.remoteapps.api.applinks.RemotePluginContainerApplicationType">
            <manifest-producer class="com.atlassian.labs.remoteapps.modules.applinks.RemotePluginContainerManifestProducer"/>
    </applinks-application-type>

    <module-type key="remote-plugin-container" class="com.atlassian.labs.remoteapps.modules.applinks.RemotePluginContainerModuleDescriptor" />

    <module-type key="described-module-type" class="com.atlassian.labs.remoteapps.integration.plugins.DescribedModuleTypeModuleDescriptor" />

    <!-- remote extension points -->
    <described-module-type key="webhook" name="Web Hook" class="com.atlassian.labs.remoteapps.modules.webhook.WebHookModuleDescriptor"
                           schema-transformer-class="com.atlassian.labs.remoteapps.modules.webhook.WebHookSchemaFactory">
        <description>Registration for a web hook callback from an internal event</description>
    </described-module-type>

    <described-module-type key="general-page" class="com.atlassian.labs.remoteapps.modules.page.GeneralPageModuleDescriptor">
        <description>A non-admin general page decorated by the application, with a link in a globally-accessible place</description>
    </described-module-type>

    <described-module-type key="admin-page" name="Administration Page" class="com.atlassian.labs.remoteapps.modules.page.AdminPageModuleDescriptor">
        <description>An admin page decorated in the admin section, with a link in the admin menu</description>
    </described-module-type>

    <described-module-type key="configure-page" class="com.atlassian.labs.remoteapps.modules.page.ConfigurePageModuleDescriptor" max-occurs="1">
        <description>The configuration page for the app, decorated in the admin section, with a link in the admin menu and a configure link in the Plugin Manager</description>
    </described-module-type>

    <described-module-type key="dialog-page" class="com.atlassian.labs.remoteapps.modules.page.dialog.DialogPageModuleDescriptor">
        <description>Loads a remote URL (iframe-wrapped) in an AUI Dialog</description>
    </described-module-type>

    <!-- product-specific modules included via xslt build process -->

</atlassian-plugin>
