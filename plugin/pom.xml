<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>atlassian-connect-parent</artifactId>
        <groupId>com.atlassian.plugins</groupId>
        <version>1.1.44-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>atlassian-connect-plugin</artifactId>
    <name>Atlassian Connect - Plugin</name>
    <packaging>atlassian-plugin</packaging>

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <dependencies>
        <dependency>
            <groupId>com.atlassian.querylang</groupId>
            <artifactId>atlassian-query-lang</artifactId>
            <version>1.1-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.querylang</groupId>
            <artifactId>confluence-cql-plugin</artifactId>
            <version>1.1-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.8.1</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>external.atlassian.json</groupId>
            <artifactId>json-schemagen-core</artifactId>
            <version>${schema.generator.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.atlassian.analytics</groupId>
            <artifactId>analytics-api</artifactId>
            <version>${atlassian.analytics.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.atlassian.jira.compat</groupId>
            <artifactId>jira-cross-compatibility-lib-bridge-factory</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- TODO: get schema-validator and guava 15.0+ versions into the products so we don't have to bundle them -->
        <dependency>
            <groupId>com.github.fge</groupId>
            <artifactId>json-schema-validator</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.github.fge</groupId>
                    <artifactId>msg-simple</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.github.fge</groupId>
            <artifactId>msg-simple</artifactId>
            <version>1.1.2-atlassian</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.bundles</groupId>
            <artifactId>json-schema-validator-atlassian-bundle</artifactId>
            <version>${atlassian.json.schema.validator.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.atlassian.plugin</groupId>
            <artifactId>atlassian-spring-scanner-annotation</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.atlassian.plugin</groupId>
            <artifactId>atlassian-spring-scanner-processor</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.atlassian.plugin</groupId>
            <artifactId>atlassian-spring-scanner-runtime</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.atlassian.labs</groupId>
            <artifactId>fastdev-plugin</artifactId>
            <version>${fastdev.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.devrel</groupId>
            <artifactId>developer-toolbox-plugin</artifactId>
            <version>${toolbox.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.plugins</groupId>
            <artifactId>atlassian-plugins-osgi-testrunner</artifactId>
            <version>${plugin.testrunner.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-io</groupId>
                    <artifactId>commons-io</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>atlassian-connect-modules</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>atlassian-connect-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>atlassian-connect-spi</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>atlassian-connect-confluence-support</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>atlassian-connect-crowd-support</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>atlassian-connect-test-support-plugin</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.osgi</groupId>
            <artifactId>spring-osgi-annotation</artifactId>
            <version>1.2.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.applinks</groupId>
            <artifactId>applinks-spi</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.applinks</groupId>
            <artifactId>applinks-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.healthcheck</groupId>
            <artifactId>atlassian-healthcheck</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.plugins</groupId>
            <artifactId>atlassian-plugins-osgi-bridge</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.plugins</groupId>
            <artifactId>atlassian-plugins-osgi</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.plugins</groupId>
            <artifactId>atlassian-plugins-webresource</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.plugins</groupId>
            <artifactId>atlassian-plugins-webfragment</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.sal</groupId>
            <artifactId>sal-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>1.8-atlassian-8</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.upm</groupId>
            <artifactId>licensing-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.crowd</groupId>
            <artifactId>crowd-integration-client-common</artifactId>
        </dependency>
        <dependency>
            <groupId>com.atlassian.crowd</groupId>
            <artifactId>embedded-crowd-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.atlassian.crowd</groupId>
            <artifactId>embedded-crowd-core</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>dom4j</groupId>
                    <artifactId>dom4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- the upm is here just for debugging -->
        <dependency>
            <groupId>com.atlassian.upm</groupId>
            <artifactId>licensing-lib</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.upm</groupId>
            <artifactId>upm-common</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.upm</groupId>
            <artifactId>upm-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.upm</groupId>
            <artifactId>upm-spi</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.oauth</groupId>
            <artifactId>atlassian-oauth-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.oauth</groupId>
            <artifactId>atlassian-oauth-consumer-spi</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.oauth</groupId>
            <artifactId>atlassian-oauth-service-provider-spi</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.jwt</groupId>
            <artifactId>jwt-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.jwt</groupId>
            <artifactId>jwt-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.jwt</groupId>
            <artifactId>jwt-applinks</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.jwt</groupId>
            <artifactId>jwt-plugin</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Active objects -->
        <dependency>
            <groupId>com.atlassian.activeobjects</groupId>
            <artifactId>activeobjects-plugin</artifactId>
            <version>${ao.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.plugins.rest</groupId>
            <artifactId>atlassian-rest-common</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.atlassian.uri</groupId>
            <artifactId>atlassian-uri</artifactId>
        </dependency>
        <dependency>
            <groupId>com.atlassian.httpclient</groupId>
            <artifactId>atlassian-httpclient-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.httpclient</groupId>
            <artifactId>atlassian-httpclient-plugin</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.webhooks</groupId>
            <artifactId>atlassian-webhooks-provider-spi</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.webhooks</groupId>
            <artifactId>atlassian-webhooks-plugin</artifactId>
            <version>${atlassian.webhooks.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.jira</groupId>
            <artifactId>jira-core</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>commons-httpclient</groupId>
                    <artifactId>commons-httpclient</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.atlassian.plugins</groupId>
            <artifactId>atlassian-plugins-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.jira</groupId>
            <artifactId>jira-rest-plugin</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>net.oauth.core</groupId>
            <artifactId>oauth</artifactId>
        </dependency>
        <dependency>
            <groupId>net.oauth.core</groupId>
            <artifactId>oauth-provider</artifactId>
        </dependency>
        <dependency>
            <groupId>com.atlassian.osgi</groupId>
            <artifactId>atlassian-osgi</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.atlassian.util.concurrent</groupId>
                    <artifactId>atlassian-util-concurrent</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.atlassian.templaterenderer</groupId>
            <artifactId>atlassian-template-renderer-api</artifactId>
            <version>${atlassian.templaterenderer.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.html</groupId>
            <artifactId>atlassian-html-encoder</artifactId>
            <version>${atlassian.html.encoder.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>${commons.httpclient.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.atlassian.aui</groupId>
            <artifactId>auiplugin</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.skyscreamer</groupId>
            <artifactId>jsonassert</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>uk.co.datumedge</groupId>
            <artifactId>hamcrest-json</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.atlassian.jira</groupId>
            <artifactId>jira-tests</artifactId>
            <version>${atlassian.jira.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-library</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.objenesis</groupId>
                    <artifactId>objenesis</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>mockobjects</groupId>
                    <artifactId>mockobjects-jdk1.3-j2ee1.3</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit-dep</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.easymock</groupId>
                    <artifactId>easymock</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.easymock</groupId>
                    <artifactId>easymockclassextension</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.powermock.api</groupId>
                    <artifactId>powermock-api-support</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.powermock.api</groupId>
                    <artifactId>powermock-api-easymock</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>

        <dependency>
            <groupId>com.atlassian.activeobjects</groupId>
            <artifactId>activeobjects-test</artifactId>
            <version>${ao.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <configuration>
                        <tags>
                            <tag>
                                <name>response.representation.200.doc</name>
                                <placement>f</placement>
                            </tag>
                            <tag>
                                <name>response.representation.200.mediaType</name>
                                <placement>f</placement>
                            </tag>
                            <tag>
                                <name>response.representation.201.doc</name>
                                <placement>f</placement>
                            </tag>
                            <tag>
                                <name>response.representation.201.mediaType</name>
                                <placement>f</placement>
                            </tag>
                            <tag>
                                <name>response.representation.204.doc</name>
                                <placement>f</placement>
                            </tag>
                            <tag>
                                <name>response.representation.400.doc</name>
                                <placement>f</placement>
                            </tag>
                            <tag>
                                <name>response.representation.401.doc</name>
                                <placement>f</placement>
                            </tag>
                            <tag>
                                <name>response.representation.404.doc</name>
                                <placement>f</placement>
                            </tag>
                        </tags>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.atlassian.maven.plugins</groupId>
                    <artifactId>maven-clover2-plugin</artifactId>
                    <configuration combine.self="override">
                        <excludes>
                            <exclude>**/test/**/*.java</exclude>
                        </excludes>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>com.atlassian.maven.plugins</groupId>
                <artifactId>maven-amps-plugin</artifactId>
                <configuration>
                    <enableDevToolbox>false</enableDevToolbox>
                    <enableFastdev>false</enableFastdev>
                    <skipManifestValidation>true</skipManifestValidation>
                    <jvmArgs>-Xmx1024m -XX:MaxPermSize=256m</jvmArgs>
                    <versionOverridesPath>${basedir}/../bin/amps-overrides.properties</versionOverridesPath>
                    <testBundleExcludes>
                        <testBundleExclude>
                            <groupId>com.atlassian.plugin</groupId>
                            <artifactId>atlassian-spring-scanner</artifactId>
                        </testBundleExclude>
                        <testBundleExclude>
                        <groupId>${project.groupId}</groupId>
                        <artifactId>atlassian-connect-modules</artifactId>
                    </testBundleExclude>
                        <testBundleExclude>
                            <groupId>com.google.code.gson</groupId>
                            <artifactId>gson</artifactId>
                        </testBundleExclude>
                    </testBundleExcludes>
                    <pluginDependencies>
                        <pluginDependency>
                            <groupId>com.atlassian.jwt</groupId>
                            <artifactId>jwt-plugin</artifactId>
                        </pluginDependency>
                        <pluginDependency>
                            <groupId>com.atlassian.bundles</groupId>
                            <artifactId>json-schema-validator-atlassian-bundle</artifactId>
                        </pluginDependency>
                        <pluginDependency>
                            <groupId>com.atlassian.webhooks</groupId>
                            <artifactId>atlassian-webhooks-plugin</artifactId>
                        </pluginDependency>
                    </pluginDependencies>
                    <instructions>
                        <Import-Package>

                            <!-- Required for pa / pi to work with the new version of atlassian-plugins -->
                            com.atlassian.plugin.osgi.bridge.external;
                            org.osgi.util.tracker;
                            org.osgi.framework;
                            <!-- End pa / pi imports -->

                            com.github.fge.jsonschema.validator;version="${atlassian.json.schema.validator.version}",
                            com.github.fge.jsonschema.core*;version="1.2.4",
                            com.github.fge.jsonschema.cfg*;version="${json.schema.validator.version}",
                            com.github.fge.jsonschema.cfg.*;version="${json.schema.validator.version}",
                            com.github.fge.jsonschema.examples*;version="${json.schema.validator.version}",
                            com.github.fge.jsonschema.examples.*;version="${json.schema.validator.version}",
                            com.github.fge.jsonschema.exceptions*;version="${json.schema.validator.version}",
                            com.github.fge.jsonschema.exceptions.*;version="${json.schema.validator.version}",
                            com.github.fge.jsonschema.format*;version="${json.schema.validator.version}",
                            com.github.fge.jsonschema.format.*;version="${json.schema.validator.version}",
                            com.github.fge.jsonschema.keyword*;version="${json.schema.validator.version}",
                            com.github.fge.jsonschema.keyword.*;version="${json.schema.validator.version}",
                            com.github.fge.jsonschema.library*;version="${json.schema.validator.version}",
                            com.github.fge.jsonschema.library.*;version="${json.schema.validator.version}",
                            com.github.fge.jsonschema.main*;version="${json.schema.validator.version}",
                            com.github.fge.jsonschema.main.*;version="${json.schema.validator.version}",
                            com.github.fge.jsonschema.messages*;version="${json.schema.validator.version}",
                            com.github.fge.jsonschema.messages.*;version="${json.schema.validator.version}",
                            com.github.fge.jsonschema.processors*;version="${json.schema.validator.version}",
                            com.github.fge.jsonschema.processors.*;version="${json.schema.validator.version}",
                            com.github.fge.msgsimple*;version="1.1.2-atlassian",
                            com.github.fge.msgsimple.*;version="1.1.2-atlassian",
                            com.atlassian.jira.bc.user;resolution:=optional,
                            *;resolution:=optional
                        </Import-Package>
                        <Export-Package>
                            com.atlassian.plugin.connect.api*;version="${project.version}",
                            com.atlassian.plugin.connect.spi*;version="${project.version}",
                            com.atlassian.plugin.connect.plugin*;version="${project.version}",
                            com.atlassian.plugin.connect.modules*,
                            com.atlassian.plugin.connect.confluence*;version="${project.version}",
                            com.atlassian.plugin.connect.jira*;version="${project.version}",
                            com.atlassian.plugin.connect.crowd*;version="${project.version}"
                        </Export-Package>
                        <Spring-Context>*</Spring-Context>
                        <Atlassian-Plugin-Key>${project.groupId}.${project.artifactId}</Atlassian-Plugin-Key>
                        <!-- DO NOT put Atlassian-Plugin-Key here!! it will bypass all transforms and component-imports will break -->
                    </instructions>
                    <systemPropertyVariables>
                        <atlassian.mail.senddisabled>false</atlassian.mail.senddisabled>
                        <sun.net.http.allowRestrictedHeaders>true</sun.net.http.allowRestrictedHeaders>
                        <atlassian.dev.mode>${devmode}</atlassian.dev.mode>
                    </systemPropertyVariables>

                    <products>
                        <product>
                            <id>jira</id>
                            <version>${atlassian.jira.version}</version>
                            <log4jProperties>${basedir}/../integration-tests/src/test/resources/log4j-jira.properties</log4jProperties>
                            <systemPropertyVariables>
                                <product>jira</product>
                                <atlassian.upm.on.demand>${atlassian.upm.on.demand}</atlassian.upm.on.demand>
                                <atlassian.dev.mode>${devmode}</atlassian.dev.mode>
                                <atlassian.mail.senddisabled>false</atlassian.mail.senddisabled>
                                <sun.net.http.allowRestrictedHeaders>true</sun.net.http.allowRestrictedHeaders>
                                <com.atlassian.plugin.connect.add_on_properties.max_properties>${addonconfig.maxpropertiesperplugin}</com.atlassian.plugin.connect.add_on_properties.max_properties>
                            </systemPropertyVariables>
                            <pluginArtifacts>
                                <pluginArtifact>
                                    <groupId>com.atlassian.labs.plugins</groupId>
                                    <artifactId>quickreload</artifactId>
                                    <version>${quickreload.version}</version>
                                </pluginArtifact>
                                <pluginArtifact>
                                    <groupId>com.atlassian.webhooks</groupId>
                                    <artifactId>atlassian-webhooks-plugin</artifactId>
                                    <version>${atlassian.webhooks.version}</version>
                                </pluginArtifact>
                                <pluginArtifact>
                                    <groupId>com.atlassian.jira.plugins.webhooks</groupId>
                                    <artifactId>jira-webhooks-plugin</artifactId>
                                    <version>${atlassian.jira.webhooks.version}</version>
                                </pluginArtifact>
                                <pluginArtifact>
                                    <groupId>com.atlassian.httpclient</groupId>
                                    <artifactId>atlassian-httpclient-plugin</artifactId>
                                    <version>${atlassian.httpclient.version}</version>
                                </pluginArtifact>
                                <pluginArtifact>
                                    <groupId>com.atlassian.gadgets</groupId>
                                    <artifactId>atlassian-gadgets-publisher-plugin</artifactId>
                                    <version>3.2.0-m8</version>
                                </pluginArtifact>
                                <pluginArtifact>
                                    <groupId>com.atlassian.jwt</groupId>
                                    <artifactId>jwt-plugin</artifactId>
                                    <version>${atlassian.jwt.version}</version>
                                </pluginArtifact>
                                <pluginArtifact>
                                    <groupId>com.atlassian.jira.tests</groupId>
                                    <artifactId>jira-testkit-plugin</artifactId>
                                    <version>${atlassian.jira.testkit.version}</version>
                                </pluginArtifact>
                                <pluginArtifact>
                                    <groupId>com.atlassian.bundles</groupId>
                                    <artifactId>json-schema-validator-atlassian-bundle</artifactId>
                                    <version>${atlassian.json.schema.validator.version}</version>
                                </pluginArtifact>
                                <pluginArtifact>
                                    <groupId>com.atlassian.jira</groupId>
                                    <artifactId>jira-projects-plugin</artifactId>
                                    <version>${atlassian.jira.projects.plugin.version}</version>
                                </pluginArtifact>
                            </pluginArtifacts>
                        </product>
                        <product>
                            <id>confluence</id>
                            <version>${atlassian.confluence.version}</version>
                            <log4jProperties>${basedir}/../integration-tests/src/test/resources/log4j-confluence.properties</log4jProperties>
                            <jvmArgs>-Xmx512m -XX:MaxPermSize=512m</jvmArgs>
                            <systemPropertyVariables>
                                <product>confluence</product>
                                <atlassian.upm.on.demand>${atlassian.upm.on.demand}</atlassian.upm.on.demand>
                                <atlassian.dev.mode>${devmode}</atlassian.dev.mode>
                                <atlassian.mail.senddisabled>false</atlassian.mail.senddisabled>
                                <sun.net.http.allowRestrictedHeaders>true</sun.net.http.allowRestrictedHeaders>
                                <com.atlassian.plugin.connect.add_on_properties.max_properties>${addonconfig.maxpropertiesperplugin}</com.atlassian.plugin.connect.add_on_properties.max_properties>
                            </systemPropertyVariables>
                            <pluginArtifacts>
                                <pluginArtifact>
                                    <groupId>com.atlassian.labs.plugins</groupId>
                                    <artifactId>quickreload</artifactId>
                                    <version>${quickreload.version}</version>
                                </pluginArtifact>
                                <pluginArtifact>
                                    <groupId>com.atlassian.webhooks</groupId>
                                    <artifactId>atlassian-webhooks-plugin</artifactId>
                                    <version>${atlassian.webhooks.version}</version>
                                </pluginArtifact>
                                <pluginArtifact>
                                    <groupId>com.atlassian.httpclient</groupId>
                                    <artifactId>atlassian-httpclient-plugin</artifactId>
                                    <version>${atlassian.httpclient.version}</version>
                                </pluginArtifact>
                                <pluginArtifact>
                                    <groupId>com.atlassian.jwt</groupId>
                                    <artifactId>jwt-plugin</artifactId>
                                    <version>${atlassian.jwt.version}</version>
                                </pluginArtifact>
                                <pluginArtifact>
                                    <artifactId>json-schema-validator-atlassian-bundle</artifactId>
                                    <groupId>com.atlassian.bundles</groupId>
                                    <version>${atlassian.json.schema.validator.version}</version>
                                </pluginArtifact>
                                <pluginArtifact>
                                    <groupId>com.atlassian.confluence.plugins</groupId>
                                    <artifactId>confluence-scriptsfinished-plugin</artifactId>
                                    <version>${atlassian.confluence.version}</version>
                                </pluginArtifact>
                                <pluginArtifact>
                                    <groupId>com.atlassian.confluence.plugins</groupId>
                                    <artifactId>confluence-create-content-plugin</artifactId>
                                    <version>${blueprints.version}</version>
                                </pluginArtifact>
                            </pluginArtifacts>

                            <bundledArtifacts>
                                <bundledArtifact>
                                    <groupId>com.atlassian.devrel</groupId>
                                    <artifactId>developer-toolbox-plugin</artifactId>
                                    <version>${toolbox.version}</version>
                                </bundledArtifact>
                            </bundledArtifacts>
                        </product>
                    </products>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>${frontend.plugin.version}</version>
                <executions>
                    <execution>
                        <id>install node and npm for plugin</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <workingDirectory>../plugin</workingDirectory>
                            <nodeVersion>${node.version}</nodeVersion>
                            <npmVersion>${npm.version}</npmVersion>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm connect-js plugin install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <workingDirectory>../plugin</workingDirectory>
                            <arguments>install ${atlassian.connect-js.path}</arguments>
                            <skip>${skipNpm}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install connect npm</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <workingDirectory>../plugin</workingDirectory>
                            <arguments>install</arguments>
                            <skip>${skipNpm}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>yuicompressor-maven-plugin</artifactId>
                <version>1.3.0</version>
                <executions>
                    <execution>
                        <id>all-min-css</id>
                        <goals>
                            <goal>compress</goal>
                        </goals>
                        <configuration>
                            <gzip>false</gzip>
                            <excludeResources>true</excludeResources>
                            <sourceDirectory>${project.build.outputDirectory}/css/iframe</sourceDirectory>
                            <outputDirectory>${project.build.outputDirectory}/css/iframe-min</outputDirectory>
                            <aggregations>
                                <aggregation>
                                    <removeIncluded>false</removeIncluded>
                                    <insertNewLine>true</insertNewLine>
                                    <output>${project.build.outputDirectory}/all.css</output>
                                    <includes>
                                        <include>css/iframe-min/*.css</include>
                                    </includes>
                                </aggregation>
                            </aggregations>
                        </configuration>
                    </execution>
                    <execution>
                        <id>all-debug-css</id>
                        <goals>
                            <goal>compress</goal>
                        </goals>
                        <configuration>
                            <gzip>false</gzip>
                            <nocompress>true</nocompress>
                            <excludeResources>true</excludeResources>
                            <aggregations>
                                <aggregation>
                                    <removeIncluded>false</removeIncluded>
                                    <insertNewLine>true</insertNewLine>
                                    <output>${project.build.outputDirectory}/all-debug.css</output>
                                    <includes>
                                        <include>css/iframe/core.css</include>
                                        <include>css/iframe/dialog2.css</include>
                                    </includes>
                                </aggregation>
                            </aggregations>
                        </configuration>
                    </execution>
                    <execution>
                        <id>all-min-js</id>
                        <goals>
                            <goal>compress</goal>
                        </goals>
                        <configuration>
                            <gzip>false</gzip>
                            <jswarn>false</jswarn>
                            <excludeResources>true</excludeResources>
                            <sourceDirectory>${project.build.outputDirectory}/js</sourceDirectory>
                            <outputDirectory>${project.build.outputDirectory}/js-min</outputDirectory>
                            <aggregations>
                                <aggregation>
                                    <removeIncluded>false</removeIncluded>
                                    <insertNewLine>true</insertNewLine>
                                    <output>${project.build.outputDirectory}/all.js</output>
                                    <includes>
                                        <!-- note: any changes here must also be made in StaticResourcesFilter.java -->
                                        <include>js/core/all.js</include>
                                        <include>js-min/iframe/plugin/user-min.js</include>
                                        <!-- product-specific inclusions are temporary until made more dynamic -->
                                        <include>js-min/iframe/plugin/jira-min.js</include>
                                        <include>js-min/iframe/plugin/confluence-min.js</include>
                                        <include>js-min/iframe/plugin/_init-min.js</include>
                                    </includes>
                                </aggregation>
                            </aggregations>
                        </configuration>
                    </execution>
                    <execution>
                        <id>host-min-js</id>
                        <goals>
                            <goal>compress</goal>
                        </goals>
                        <configuration>
                            <gzip>false</gzip>
                            <jswarn>false</jswarn>
                            <excludeResources>true</excludeResources>
                            <sourceDirectory>${project.build.outputDirectory}/js</sourceDirectory>
                            <outputDirectory>${project.build.outputDirectory}/js</outputDirectory>
                            <excludes>
                                <exclude>${project.build.outputDirectory}/js/iframe</exclude>
                                <exclude>${project.build.outputDirectory}&gt;/js/**/*-min.js</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>xml-maven-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>transform</goal>
                        </goals>
                        <phase>process-resources</phase>
                    </execution>
                </executions>
                <configuration>
                    <transformationSets>
                        <transformationSet>
                            <dir>${project.build.outputDirectory}</dir>
                            <includes>
                                <include>atlassian-plugin.xml</include>
                            </includes>
                            <stylesheet>${basedir}/src/main/build/plugin-merge.xsl</stylesheet>
                            <outputDir>${project.build.outputDirectory}</outputDir>
                            <parameters>
                                <parameter>
                                    <name>baseDir</name>
                                    <value>${project.build.outputDirectory}</value>
                                </parameter>
                            </parameters>
                        </transformationSet>
                    </transformationSets>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.twdata.maven</groupId>
                <artifactId>maven-cli-plugin</artifactId>
                <version>1.0.10</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <commands>
                        <pa>com.atlassian.maven.plugins:maven-amps-plugin:copy-bundled-dependencies com.atlassian.maven.plugins:maven-amps-plugin:compress-resources org.apache.maven.plugins:maven-resources-plugin:resources com.atlassian.maven.plugins:maven-amps-plugin:filter-plugin-descriptor org.codehaus.mojo:xml-maven-plugin:transform compile com.atlassian.maven.plugins:maven-amps-plugin:generate-manifest com.atlassian.maven.plugins:maven-amps-plugin:validate-manifest com.atlassian.maven.plugins:maven-amps-plugin:jar org.apache.maven.plugins:maven-install-plugin:install</pa>
                        <pi>com.atlassian.maven.plugins:maven-amps-plugin:copy-bundled-dependencies com.atlassian.maven.plugins:maven-amps-plugin:compress-resources org.apache.maven.plugins:maven-resources-plugin:resources com.atlassian.maven.plugins:maven-amps-plugin:filter-plugin-descriptor org.codehaus.mojo:xml-maven-plugin:transform compile com.atlassian.maven.plugins:maven-amps-plugin:generate-manifest com.atlassian.maven.plugins:maven-amps-plugin:validate-manifest com.atlassian.maven.plugins:maven-amps-plugin:jar org.apache.maven.plugins:maven-install-plugin:install com.atlassian.maven.plugins:maven-amps-plugin:install</pi>
                    </commands>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-plugin-info</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <includes>
                                        <include>build.properties</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.atlassian.plugin</groupId>
                <artifactId>atlassian-spring-scanner-maven-plugin</artifactId>
                <version>${atlassian.spring.scanner.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>atlassian-spring-scanner</goal>
                        </goals>
                        <phase>process-classes</phase>
                    </execution>
                </executions>
                <configuration>
                    <includeExclude>-com.atlassian.jira.compatibility.*</includeExclude>
                </configuration>
            </plugin>

            <!-- this MUST run after compilation -->
            <plugin>
                <groupId>external.atlassian.json</groupId>
                <artifactId>json-schemagen-maven-plugin</artifactId>
                <version>${schema.generator.version}</version>
                <executions>
                    <execution>
                        <id>schema-support</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>generate-support-docs</goal>
                        </goals>
                        <configuration>
                            <basePackage>com.atlassian.plugin.connect.modules.beans</basePackage>
                            <sourcepath>src/main/java:../modules/src/main/java</sourcepath>
                            <debug>${debugSchemaGen}</debug>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jira-schema</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>generate-schema</goal>
                        </goals>
                        <configuration>
                            <generatorProvider>com.atlassian.plugin.connect.jira.JiraSchemaGeneratorProvider</generatorProvider>
                            <rootClassName>com.atlassian.plugin.connect.modules.beans.ConnectAddonBean</rootClassName>
                            <rawOutput>${project.build.outputDirectory}/schema/jira-schema.json</rawOutput>
                            <prettyOutput>${project.build.outputDirectory}/schema/jira-schema-pretty.json</prettyOutput>
                            <enumCase>insensitive</enumCase>
                        </configuration>
                    </execution>
                    <execution>
                        <id>confluence-schema</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>generate-schema</goal>
                        </goals>
                        <configuration>
                            <generatorProvider>com.atlassian.plugin.connect.confluence.ConfluenceSchemaGeneratorProvider</generatorProvider>
                            <rootClassName>com.atlassian.plugin.connect.modules.beans.ConnectAddonBean</rootClassName>
                            <rawOutput>${project.build.outputDirectory}/schema/confluence-schema.json</rawOutput>
                            <prettyOutput>${project.build.outputDirectory}/schema/confluence-schema-pretty.json</prettyOutput>
                            <enumCase>insensitive</enumCase>
                        </configuration>
                    </execution>
                    <execution>
                        <id>shallow-schema</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>generate-schema</goal>
                        </goals>
                        <configuration>
                            <generatorProvider>com.atlassian.json.schema.DefaultJsonSchemaGeneratorProvider</generatorProvider>
                            <rootClassName>com.atlassian.plugin.connect.modules.beans.ConnectAddonBean</rootClassName>
                            <ignoreFilter>shallow</ignoreFilter>
                            <rawOutput>${project.build.outputDirectory}/schema/shallow-schema.json</rawOutput>
                            <prettyOutput>${project.build.outputDirectory}/schema/shallow-schema-pretty.json</prettyOutput>
                            <enumCase>insensitive</enumCase>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- we need to use this instead of built-in javac processing so we can process multiple source roots -->
            <plugin>
                <groupId>org.bsc.maven</groupId>
                <artifactId>maven-processor-plugin</artifactId>
                <version>2.2.4</version>
                <executions>
                    <execution>
                        <id>process</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>process-resources</phase>
                    </execution>
                </executions>
                <configuration>
                    <additionalSourceDirectories>
                        <additionalSourceDirectory>../modules/src/main/java/</additionalSourceDirectory>
                        <additionalSourceDirectory>../api-parent/spi/src/main/java/</additionalSourceDirectory>
                    </additionalSourceDirectories>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerArgument>-proc:none</compilerArgument>
                    <source>1.7</source>
                    <target>1.7</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>karma-tests</id>
            <activation>
                <property>
                    <name>runKarma</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- unpack lib dependencies to make available to qunit -->
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>extract-qunit-dependencies</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>unpack-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/qunit/dependencies</outputDirectory>
                                    <includeGroupIds>com.atlassian.aui</includeGroupIds>
                                    <includeArtifactIds>auiplugin</includeArtifactIds>
                                    <includes>**/*.js</includes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- karma testrunner plugin for iframe code -->
                    <plugin>
                        <groupId>com.kelveden</groupId>
                        <artifactId>maven-karma-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <!-- test plugin-side code -->
                            <execution>
                                <id>karma-iframe-tests</id>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <skipTests>false</skipTests>
                                    <configFile>karma.iframe.conf.js</configFile>
                                </configuration>
                            </execution>
                            <!-- test host-side code -->
                            <execution>
                                <id>karma-host-tests</id>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <skipTests>false</skipTests>
                                    <configFile>karma.conf.js</configFile>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <browsers>PhantomJS</browsers>
                            <karmaExecutable>node_modules/karma/bin/karma</karmaExecutable>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>descriptor-validation-tests</id>
            <activation>
                <property>
                    <name>descriptorValidation</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- karma testrunner plugin for iframe code -->
                    <plugin>
                        <groupId>com.kelveden</groupId>
                        <artifactId>maven-karma-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <!-- test add-on validation results -->
                            <execution>
                                <id>descriptor-validator-results-tests</id>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <skipTests>false</skipTests>
                                    <configFile>karma.descriptor-validator.conf.js</configFile>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <browsers>Chrome</browsers>
                            <karmaExecutable>node_modules/karma/bin/karma</karmaExecutable>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>clover</id>
            <dependencies>
                <dependency>
                    <groupId>com.atlassian.clover</groupId>
                    <artifactId>clover</artifactId>
                    <version>${clover.libversion}</version>
                    <scope>compile</scope>
                </dependency>
            </dependencies>
         </profile>

    </profiles>

    <properties>
        <product>jira</product>
        <skipITs>true</skipITs>
        <build.test.plugin>false</build.test.plugin>
        <devmode>true</devmode>
        <fastdev.version>2.4</fastdev.version>
        <toolbox.version>2.0.12</toolbox.version>
        <test.plugin.artifact> </test.plugin.artifact>
        <runKarma>false</runKarma>
        <mvnCommand>/usr/bin/mvn</mvnCommand>
        <debugSchemaGen>false</debugSchemaGen>
        <ao.version>0.29.3</ao.version>
        <od.testing.configuration>
            use-java,8
            use-maven,3
            include-artifact,com.atlassian.plugins:atlassian-connect-integration-tests
        </od.testing.configuration>
        <addonconfig.maxpropertiesperplugin>50</addonconfig.maxpropertiesperplugin>
    </properties>
</project>
